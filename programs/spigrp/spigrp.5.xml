<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
                   "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<!-- lifted from troff+man by doclifter -->
<refentry>
<refentryinfo>
  <author><firstname>Paul</firstname><surname>Wouters</surname><authorblurb><para>placeholder to suppress warning</para> </authorblurb></author>
</refentryinfo>
<refmeta>
<refentrytitle>IPSEC_SPIGRP</refentrytitle>
<manvolnum>5</manvolnum>
<refmiscinfo class='date'>27 Jun 2000</refmiscinfo>
<refmiscinfo class="source">libreswan</refmiscinfo>
<refmiscinfo class="manual">Executable programs</refmiscinfo>
</refmeta>
<refnamediv id='name'>
<refname>ipsec_spigrp</refname>
<refpurpose>list IPSEC Security Association groupings</refpurpose>
</refnamediv>
<!-- body begins here -->
<refsynopsisdiv id='synopsis'>
<cmdsynopsis>
  <command>ipsec</command>    
    <arg choice='plain'><replaceable>spigrp</replaceable></arg>
    <sbr/>
    <arg choice='plain'><replaceable>cat/proc/net/ipsec_spigrp</replaceable></arg>
    <sbr/>
</cmdsynopsis>
</refsynopsisdiv>

<refsect1 id='obsolete'><title>OBSOLETE</title>
<para>Note that spigrp is only supported on the classic KLIPS stack. It is
not supported on any other stack and will be completely removed in future
versions. A replacement command still needs to be designed</para>
</refsect1>


<refsect1 id='description'><title>DESCRIPTION</title>
<para><filename>/proc/net/ipsec_spigrp</filename>
is a read-only file that lists groups of IPSEC Security Associations
(SAs).</para>

<para>An entry in the IPSEC extended routing table can only point (via an
SAID) to one SA.  If more than one transform must be applied to a given
type of packet, this can be accomplished by setting up several SAs with
the same destination address but potentially different SPIs and
protocols, and grouping them with
<emphasis remap='I'>ipsec_spigrp(8)</emphasis>.</para>

<para>The SA groups are listed, one line per connection/group, as a sequence
of SAs to be applied (or that should have been applied, in the case of
an incoming packet) from inside to outside the packet.  An SA is
identified by its SAID, which consists of protocol ("ah", "esp", "comp" or
"tun"), SPI (with '.' for IPv4 or ':' for IPv6 prefixed hexadecimal number ) and destination address
(IPv4 dotted quad or IPv6 coloned hex) prefixed by '@', in the format &lt;proto&gt;&lt;af&gt;&lt;spi&gt;@&lt;dest&gt;.</para>
</refsect1>

<refsect1 id='examples'><title>EXAMPLES</title>
<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>tun.3d0@192.168.2.110</emphasis></term>
  <listitem>
<para><emphasis remap='B'>comp.3d0@192.168.2.110</emphasis>
<emphasis remap='B'>esp.187a101b@192.168.2.110</emphasis>
<emphasis remap='B'>ah.187a101a@192.168.2.110</emphasis></para>
  </listitem>
  </varlistentry>
</variablelist>

<para>is a group of 3 SAs, destined for 
<literal>192.168.2.110</literal>
with an IPv4-in-IPv4 tunnel SA applied first with an SPI of
<emphasis remap='B'>3d0</emphasis>
in hexadecimal, followed by a Deflate compression header to compress
the packet with CPI of
<emphasis remap='B'>3d0</emphasis>
in hexadecimal, followed by an Encapsulating Security Payload header to
encrypt the packet with SPI
<emphasis remap='B'>187a101b</emphasis>
in hexadecimal, followed by an Authentication Header to authenticate the
packet with SPI
<emphasis remap='B'>187a101a</emphasis>
in hexadecimal, applied from inside to outside the packet.  This could
be an incoming or outgoing group, depending on the address of the local
machine.</para>

<variablelist remap='TP'>
  <varlistentry>
  <term><emphasis remap='B'>tun:3d0@3049:1::2</emphasis></term>
  <listitem>
<para><emphasis remap='B'>comp:3d0@3049:1::2</emphasis>
<emphasis remap='B'>esp:187a101b@3049:1::2</emphasis>
<emphasis remap='B'>ah:187a101a@3049:1::2</emphasis></para>
  </listitem>
  </varlistentry>
</variablelist>

<para>is a group of 3 SAs, destined for 
<emphasis remap='B'>3049:1::2</emphasis>
with an IPv6-in-IPv6 tunnel SA applied first with an SPI of
<emphasis remap='B'>3d0</emphasis>
in hexadecimal, followed by a Deflate compression header to compress
the packet with CPI of
<emphasis remap='B'>3d0</emphasis>
in hexadecimal, followed by an Encapsulating Security Payload header to
encrypt the packet with SPI
<emphasis remap='B'>187a101b</emphasis>
in hexadecimal, followed by an Authentication Header to authenticate the
packet with SPI
<emphasis remap='B'>187a101a</emphasis>
in hexadecimal, applied from inside to outside the packet.  This could
be an incoming or outgoing group, depending on the address of the local
machine.</para>

</refsect1>

<refsect1 id='files'><title>FILES</title>
<para>/proc/net/ipsec_spigrp, /usr/local/bin/ipsec</para>
</refsect1>

<refsect1 id='see_also'><title>SEE ALSO</title>
<para>ipsec(8), ipsec_tncfg(5), ipsec_eroute(5),
ipsec_spi(5), ipsec_klipsdebug(5), ipsec_spigrp(8), ipsec_version(5),
ipsec_pf_key(5)</para>
</refsect1>

<refsect1 id='history'><title>HISTORY</title>
<para>Written for the Linux FreeS/WAN project
&lt;<ulink url='http://www.freeswan.org/'>http://www.freeswan.org/</ulink>&gt;
by Richard Guy Briggs.</para>
</refsect1>

<refsect1 id='bugs'><title>BUGS</title>
<para>:-)</para>

</refsect1>
</refentry>

