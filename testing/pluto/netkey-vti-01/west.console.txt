/testing/guestbin/swan-prep
west #
 # We want to test without a specific existing non-device route,
west #
 # so we remove the regular route for 192.0.2.0/24, and add default route
west #
 ip route del 192.0.2.0/24
west #
 ip route del default
west #
 ip route add 0.0.0.0/0 via 192.1.2.23 dev eth1
west #
 # confirm that the network is alive
west #
 ../../pluto/bin/wait-until-alive -I 192.0.1.254 192.0.2.254
destination -I 192.0.1.254 192.0.2.254 is alive
west #
 # ensure that clear text does not get through
west #
 iptables -A INPUT -i eth1 -s 192.0.2.0/24 -j DROP
west #
 iptables -I INPUT -m policy --dir in --pol ipsec -j ACCEPT
west #
 # confirm clear text does not get through
west #
 ../../pluto/bin/ping-once.sh --down -I 192.0.1.254 192.0.2.254
down
west #
 ipsec start
Redirecting to: [initsystem]
west #
 /testing/pluto/bin/wait-until-pluto-started
west #
 ipsec auto --add westnet-eastnet-vti
002 "westnet-eastnet-vti": added IKEv1 connection
west #
 echo "initdone"
initdone
west #
 ipsec auto --up westnet-eastnet-vti
002 "westnet-eastnet-vti" #1: initiating IKEv1 Main Mode connection
1v1 "westnet-eastnet-vti" #1: sent Main Mode request
1v1 "westnet-eastnet-vti" #1: sent Main Mode I2
1v1 "westnet-eastnet-vti" #1: sent Main Mode I3
002 "westnet-eastnet-vti" #1: Peer ID is ID_FQDN: '@east'
003 "westnet-eastnet-vti" #1: authenticated using RSA with SHA-1
004 "westnet-eastnet-vti" #1: IKE SA established {auth=RSA_SIG cipher=AES_CBC_256 integ=HMAC_SHA2_256 group=MODP2048}
002 "westnet-eastnet-vti" #2: initiating Quick Mode RSASIG+ENCRYPT+TUNNEL+PFS+UP+IKEV1_ALLOW+IKE_FRAG_ALLOW+ESN_NO
1v1 "westnet-eastnet-vti" #2: sent Quick Mode request
002 "westnet-eastnet-vti" #2: up-client output: net.ipv4.conf.vti0.disable_policy = 1
002 "westnet-eastnet-vti" #2: up-client output: net.ipv4.conf.vti0.rp_filter = 0
002 "westnet-eastnet-vti" #2: up-client output: net.ipv4.conf.vti0.forwarding = 1
002 "westnet-eastnet-vti" #2: prepare-client output: vti interface "vti0" already exists with conflicting setting (perhaps need vti-sharing=yes ?
004 "westnet-eastnet-vti" #2: IPsec SA established tunnel mode {ESP=>0xESPESP <0xESPESP xfrm=AES_CBC_128-HMAC_SHA1_96 NATOA=none NATD=none DPD=passive}
west #
 # since we have vti-routing=no, no marking, so unencrypted packets are dropped
west #
 ping -n -c 4 -I 192.0.1.254 192.0.2.254
PING 192.0.2.254 (192.0.2.254) from 192.0.1.254 : 56(84) bytes of data.
--- 192.0.2.254 ping statistics ---
4 packets transmitted, 0 received, 100% packet loss, time XXXX
west #
 ipsec whack --trafficstatus
006 #2: "westnet-eastnet-vti", type=ESP, add_time=1234567890, inBytes=0, outBytes=0, id='@east'
west #
 ip route add 192.0.2.0/24 dev vti0
west #
 # now packets into vti0 device will get marked, and encrypted and counted
west #
 ping -n -c 4 -I 192.0.1.254 192.0.2.254
PING 192.0.2.254 (192.0.2.254) from 192.0.1.254 : 56(84) bytes of data.
64 bytes from 192.0.2.254: icmp_seq=1 ttl=64 time=0.XXX ms
64 bytes from 192.0.2.254: icmp_seq=2 ttl=64 time=0.XXX ms
64 bytes from 192.0.2.254: icmp_seq=3 ttl=64 time=0.XXX ms
64 bytes from 192.0.2.254: icmp_seq=4 ttl=64 time=0.XXX ms
--- 192.0.2.254 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time XXXX
rtt min/avg/max/mdev = 0.XXX/0.XXX/0.XXX/0.XXX ms
west #
 ipsec whack --trafficstatus
006 #2: "westnet-eastnet-vti", type=ESP, add_time=1234567890, inBytes=336, outBytes=336, id='@east'
west #
 # ensure no error on delete
west #
 ipsec auto --delete westnet-eastnet-vti
002 "westnet-eastnet-vti": terminating SAs using this connection
002 "westnet-eastnet-vti" #2: deleting state (STATE_QUICK_I2) and sending notification
005 "westnet-eastnet-vti" #2: ESP traffic information: in=336B out=336B
002 "westnet-eastnet-vti" #1: deleting state (STATE_MAIN_I4) and sending notification
west #
 echo done
done
west #
 grep -v -P "\t0$" /proc/net/xfrm_stat
west #
 ipsec whack --shutdown
west #
 # there should be no vti0 device left
west #
 ip addr show vti0
5: vti0@NONE: <POINTOPOINT,NOARP,UP,LOWER_UP> mtu 1480 state UNKNOWN
    link/ipip 192.1.2.45 peer 192.1.2.23
west #
 ../bin/check-for-core.sh
west #
 if [ -f /sbin/ausearch ]; then ausearch -r -m avc -ts recent ; fi
west #
 
