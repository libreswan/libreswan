nss directory plutomain: /etc/ipsec.d
NSS Initialized
libcap-ng support [enabled]
FIPS HMAC integrity support [disabled]
Linux audit support [disabled]
Starting Pluto (Libreswan Version v3.10-398-gac7a55f-dirty-ikev2-cp XFRM(netkey) KLIPS NSS DNSSEC LIBCAP_NG XAUTH_PAM NETWORKMANAGER KLIPS_MAST CURL(non-NSS)) pid:10676
core dump dir: /tmp
secrets file: /etc/ipsec.secrets
leak-detective enabled
SAref support [disabled]: Protocol not available
SAbind support [disabled]: Protocol not available
NSS crypto [enabled]
XAUTH PAM support [enabled]
   NAT-Traversal support  [enabled]
| inserting event EVENT_REINIT_SECRET, timeout in 3600 seconds
| event added at head of queue
| inserting event EVENT_PENDING_DDNS, timeout in 60 seconds
| event added at head of queue
| inserting event EVENT_PENDING_PHASE2, timeout in 120 seconds
| event added after event EVENT_PENDING_DDNS
ike_alg_register_enc(): Activating OAKLEY_TWOFISH_CBC_SSH: Ok
ike_alg_register_enc(): Activating OAKLEY_TWOFISH_CBC: Ok
ike_alg_register_enc(): Activating OAKLEY_SERPENT_CBC: Ok
ike_alg_register_enc(): Activating OAKLEY_AES_CBC: Ok
ike_alg_register_hash(): Activating OAKLEY_SHA2_512: Ok
ike_alg_register_hash(): Activating OAKLEY_SHA2_384: Ok
ike_alg_register_hash(): Activating OAKLEY_SHA2_256: Ok
starting up 1 crypto helpers
started thread for crypto helper 0 (master fd 8)
Using Linux XFRM/NETKEY IPsec interface code on 3.16.3-200.fc20.x86_64
| process 10676 listening for PF_KEY_V2 on file descriptor 13
| kernel_alg_init()
| kernel_alg_add(): satype=3, exttype=15, alg_id=18(ESP_AES_GCM_A)
| kernel_alg_add(): satype=3, exttype=15, alg_id=19(ESP_AES_GCM_B)
| kernel_alg_add(): satype=3, exttype=15, alg_id=20(ESP_AES_GCM_C)
| kernel_alg_add(): satype=3, exttype=15, alg_id=14(ESP_AES_CCM_A)
| kernel_alg_add(): satype=3, exttype=15, alg_id=15(ESP_AES_CCM_B)
| kernel_alg_add(): satype=3, exttype=15, alg_id=16(ESP_AES_CCM_C)
ike_alg_register_enc(): Activating aes_ccm_8: Ok
ike_alg_register_enc(): Activating aes_ccm_12: Ok
ike_alg_register_enc(): Activating aes_ccm_16: Ok
ike_alg_register_enc(): Activating aes_gcm_8: Ok
ike_alg_register_enc(): Activating aes_gcm_12: Ok
ike_alg_register_enc(): Activating aes_gcm_16: Ok
| Registered AEAD AES CCM/GCM algorithms
| finish_pfkey_msg: K_SADB_REGISTER message 1 for AH
| status value returned by setting the priority of this thread (crypto helper 0) 22
| crypto helper 0 waiting on fd 9
|   02 07 00 02  02 00 00 00  01 00 00 00  b4 29 00 00
| pfkey_get: K_SADB_REGISTER message 1
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: sadb_msg_len=22 sadb_supported_len=72
| kernel_alg_add(): satype=2, exttype=14, alg_id=251(ESP_KAME_NULL)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[0], exttype=14, satype=2, alg_id=251, alg_ivlen=0, alg_minbits=0, alg_maxbits=0, res=0, ret=1
| kernel_alg_add(): satype=2, exttype=14, alg_id=2(ESP_DES)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[1], exttype=14, satype=2, alg_id=2, alg_ivlen=0, alg_minbits=128, alg_maxbits=128, res=0, ret=1
| kernel_alg_add(): satype=2, exttype=14, alg_id=3(ESP_3DES)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[2], exttype=14, satype=2, alg_id=3, alg_ivlen=0, alg_minbits=160, alg_maxbits=160, res=0, ret=1
| kernel_alg_add(): satype=2, exttype=14, alg_id=5(ESP_IDEA)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[3], exttype=14, satype=2, alg_id=5, alg_ivlen=0, alg_minbits=256, alg_maxbits=256, res=0, ret=1
| kernel_alg_add(): satype=2, exttype=14, alg_id=6(ESP_CAST)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[4], exttype=14, satype=2, alg_id=6, alg_ivlen=0, alg_minbits=384, alg_maxbits=384, res=0, ret=1
| kernel_alg_add(): satype=2, exttype=14, alg_id=7(ESP_BLOWFISH)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[5], exttype=14, satype=2, alg_id=7, alg_ivlen=0, alg_minbits=512, alg_maxbits=512, res=0, ret=1
| kernel_alg_add(): satype=2, exttype=14, alg_id=8(ESP_3IDEA)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[6], exttype=14, satype=2, alg_id=8, alg_ivlen=0, alg_minbits=160, alg_maxbits=160, res=0, ret=1
| kernel_alg_add(): satype=2, exttype=14, alg_id=9(ESP_DES_IV32)
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[7], exttype=14, satype=2, alg_id=9, alg_ivlen=0, alg_minbits=128, alg_maxbits=128, res=0, ret=1
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: sadb_msg_len=22 sadb_supported_len=88
| kernel_alg_add(): satype=2, exttype=15, alg_id=11(ESP_NULL)
| kernel_alg_add(2,15,11) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[8], exttype=15, satype=2, alg_id=11, alg_ivlen=0, alg_minbits=0, alg_maxbits=0, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=2(ESP_DES)
| kernel_alg_add(2,15,2) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[9], exttype=15, satype=2, alg_id=2, alg_ivlen=8, alg_minbits=64, alg_maxbits=64, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=3(ESP_3DES)
| kernel_alg_add(2,15,3) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[10], exttype=15, satype=2, alg_id=3, alg_ivlen=8, alg_minbits=192, alg_maxbits=192, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=6(ESP_CAST)
| kernel_alg_add(2,15,6) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[11], exttype=15, satype=2, alg_id=6, alg_ivlen=8, alg_minbits=40, alg_maxbits=128, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=7(ESP_BLOWFISH)
| kernel_alg_add(2,15,7) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[12], exttype=15, satype=2, alg_id=7, alg_ivlen=8, alg_minbits=40, alg_maxbits=448, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=12(ESP_AES)
| kernel_alg_add(2,15,12) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[13], exttype=15, satype=2, alg_id=12, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=252(ESP_SERPENT)
| kernel_alg_add(2,15,252) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[14], exttype=15, satype=2, alg_id=252, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=22(ESP_CAMELLIA)
| kernel_alg_add(2,15,22) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[15], exttype=15, satype=2, alg_id=22, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=253(ESP_TWOFISH)
| kernel_alg_add(2,15,253) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[16], exttype=15, satype=2, alg_id=253, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=-1
| kernel_alg_add(): satype=2, exttype=15, alg_id=13(ESP_AES_CTR)
| kernel_alg_add(2,15,13) fails because alg combo is invalid
| kernel_alg_register_pfkey(): SADB_SATYPE_AH: alg[17], exttype=15, satype=2, alg_id=13, alg_ivlen=8, alg_minbits=160, alg_maxbits=288, res=0, ret=-1
| AH registered with kernel.
| finish_pfkey_msg: K_SADB_REGISTER message 2 for ESP
|   02 07 00 03  02 00 00 00  02 00 00 00  b4 29 00 00
| pfkey_get: K_SADB_REGISTER message 2
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: sadb_msg_len=22 sadb_supported_len=72
| kernel_alg_add(): satype=3, exttype=14, alg_id=251(ESP_KAME_NULL)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=251
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[0], exttype=14, satype=3, alg_id=251, alg_ivlen=0, alg_minbits=0, alg_maxbits=0, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=14, alg_id=2(ESP_DES)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=2
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[1], exttype=14, satype=3, alg_id=2, alg_ivlen=0, alg_minbits=128, alg_maxbits=128, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=14, alg_id=3(ESP_3DES)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=3
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[2], exttype=14, satype=3, alg_id=3, alg_ivlen=0, alg_minbits=160, alg_maxbits=160, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=14, alg_id=5(ESP_IDEA)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=5
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[3], exttype=14, satype=3, alg_id=5, alg_ivlen=0, alg_minbits=256, alg_maxbits=256, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=14, alg_id=6(ESP_CAST)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=6
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[4], exttype=14, satype=3, alg_id=6, alg_ivlen=0, alg_minbits=384, alg_maxbits=384, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=14, alg_id=7(ESP_BLOWFISH)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=7
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[5], exttype=14, satype=3, alg_id=7, alg_ivlen=0, alg_minbits=512, alg_maxbits=512, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=14, alg_id=8(ESP_3IDEA)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=8
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[6], exttype=14, satype=3, alg_id=8, alg_ivlen=0, alg_minbits=160, alg_maxbits=160, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=14, alg_id=9(ESP_DES_IV32)
| kernel_alg_add(): discarding already setup satype=3, exttype=14, alg_id=9
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[7], exttype=14, satype=3, alg_id=9, alg_ivlen=0, alg_minbits=128, alg_maxbits=128, res=0, ret=0
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: sadb_msg_len=22 sadb_supported_len=88
| kernel_alg_add(): satype=3, exttype=15, alg_id=11(ESP_NULL)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[8], exttype=15, satype=3, alg_id=11, alg_ivlen=0, alg_minbits=0, alg_maxbits=0, res=0, ret=1
| kernel_alg_add(): satype=3, exttype=15, alg_id=2(ESP_DES)
| kernel_alg_add(): Ignoring alg_id=2(ESP_DES) - too weak
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[9], exttype=15, satype=3, alg_id=2, alg_ivlen=8, alg_minbits=64, alg_maxbits=64, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=15, alg_id=3(ESP_3DES)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[10], exttype=15, satype=3, alg_id=3, alg_ivlen=8, alg_minbits=192, alg_maxbits=192, res=0, ret=1
| kernel_alg_add(): satype=3, exttype=15, alg_id=6(ESP_CAST)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[11], exttype=15, satype=3, alg_id=6, alg_ivlen=8, alg_minbits=40, alg_maxbits=128, res=0, ret=1
| kernel_alg_add(): satype=3, exttype=15, alg_id=7(ESP_BLOWFISH)
| kernel_alg_add(): Ignoring alg_id=7(ESP_BLOWFISH) - too weak
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[12], exttype=15, satype=3, alg_id=7, alg_ivlen=8, alg_minbits=40, alg_maxbits=448, res=0, ret=0
| kernel_alg_add(): satype=3, exttype=15, alg_id=12(ESP_AES)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[13], exttype=15, satype=3, alg_id=12, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=1
| kernel_alg_add(): satype=3, exttype=15, alg_id=252(ESP_SERPENT)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[14], exttype=15, satype=3, alg_id=252, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=1
| kernel_alg_add(): satype=3, exttype=15, alg_id=22(ESP_CAMELLIA)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[15], exttype=15, satype=3, alg_id=22, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=1
| kernel_alg_add(): satype=3, exttype=15, alg_id=253(ESP_TWOFISH)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[16], exttype=15, satype=3, alg_id=253, alg_ivlen=8, alg_minbits=128, alg_maxbits=256, res=0, ret=1
| kernel_alg_add(): satype=3, exttype=15, alg_id=13(ESP_AES_CTR)
| kernel_alg_register_pfkey(): SADB_SATYPE_ESP: alg[17], exttype=15, satype=3, alg_id=13, alg_ivlen=8, alg_minbits=160, alg_maxbits=288, res=0, ret=1
| ESP registered with kernel.
| finish_pfkey_msg: K_SADB_REGISTER message 3 for IPCOMP
|   02 07 00 09  02 00 00 00  03 00 00 00  b4 29 00 00
| pfkey_get: K_SADB_REGISTER message 3
| IPCOMP registered with kernel.
| Registered AH, ESP and IPCOMP
| Changed path to directory '/etc/ipsec.d/cacerts'
| Changing to directory '/etc/ipsec.d/crls'
| inserting event EVENT_LOG_DAILY, timeout in 20021 seconds
| event added after event EVENT_REINIT_SECRET
| next event EVENT_PENDING_DDNS in 59 seconds
| calling addconn helper using execve
|
| *received whack message
listening for IKE messages
| Inspecting interface lo
| found lo with address 127.0.0.1
| Inspecting interface eth0
| found eth0 with address 10.211.55.31
| Inspecting interface eth1
| found eth1 with address 10.37.129.25
| Inspecting interface eth2
| found eth2 with address 192.1.2.23
| Inspecting interface eth2
| found eth2 with address 192.0.2.254
adding interface eth2/eth2 192.0.2.254:500
| NAT-Traversal: Trying new style NAT-T
| NAT-Traversal: ESPINUDP(2) setup failed for new style NAT-T family IPv4 (errno=95)
| NAT-Traversal: Trying old style NAT-T
| NAT-Traversal: ESPINUDP(2) setup succeeded for old style NAT-T family IPv4
adding interface eth2/eth2 192.0.2.254:4500
adding interface eth2/eth2 192.1.2.23:500
| NAT-Traversal: Trying new style NAT-T
| NAT-Traversal: ESPINUDP(2) setup failed for new style NAT-T family IPv4 (errno=95)
| NAT-Traversal: Trying old style NAT-T
| NAT-Traversal: ESPINUDP(2) setup succeeded for old style NAT-T family IPv4
adding interface eth2/eth2 192.1.2.23:4500
adding interface eth1/eth1 10.37.129.25:500
| NAT-Traversal: Trying new style NAT-T
| NAT-Traversal: ESPINUDP(2) setup failed for new style NAT-T family IPv4 (errno=95)
| NAT-Traversal: Trying old style NAT-T
| NAT-Traversal: ESPINUDP(2) setup succeeded for old style NAT-T family IPv4
adding interface eth1/eth1 10.37.129.25:4500
adding interface eth0/eth0 10.211.55.31:500
| NAT-Traversal: Trying new style NAT-T
| NAT-Traversal: ESPINUDP(2) setup failed for new style NAT-T family IPv4 (errno=95)
| NAT-Traversal: Trying old style NAT-T
| NAT-Traversal: ESPINUDP(2) setup succeeded for old style NAT-T family IPv4
adding interface eth0/eth0 10.211.55.31:4500
adding interface lo/lo 127.0.0.1:500
| NAT-Traversal: Trying new style NAT-T
| NAT-Traversal: ESPINUDP(2) setup failed for new style NAT-T family IPv4 (errno=95)
| NAT-Traversal: Trying old style NAT-T
| NAT-Traversal: ESPINUDP(2) setup succeeded for old style NAT-T family IPv4
adding interface lo/lo 127.0.0.1:4500
| certs and keys locked by 'free_preshared_secrets'
| certs and keys unlocked by 'free_preshard_secrets'
loading secrets from "/etc/ipsec.secrets"
| id type added to secret(0x7fb50e11bef8) PPK_PSK: @east
| id type added to secret(0x7fb50e11bef8) PPK_PSK: @road
| Processing PSK at line 1: passed
| certs and keys locked by 'process_secret'
| certs and keys unlocked by 'process_secret'
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 58 seconds
| next event EVENT_PENDING_DDNS in 58 seconds
| reaped addconn helper child
|
| *received whack message
listening for IKE messages
| Inspecting interface lo
| found lo with address 127.0.0.1
| Inspecting interface eth0
| found eth0 with address 10.211.55.31
| Inspecting interface eth1
| found eth1 with address 10.37.129.25
| Inspecting interface eth2
| found eth2 with address 192.1.2.23
| Inspecting interface eth2
| found eth2 with address 192.0.2.254
| certs and keys locked by 'free_preshared_secrets'
forgetting secrets
| certs and keys unlocked by 'free_preshard_secrets'
loading secrets from "/etc/ipsec.secrets"
| id type added to secret(0x7fb50e11bef8) PPK_PSK: @east
| id type added to secret(0x7fb50e11bef8) PPK_PSK: @road
| Processing PSK at line 1: passed
| certs and keys locked by 'process_secret'
| certs and keys unlocked by 'process_secret'
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 58 seconds
| next event EVENT_PENDING_DDNS in 58 seconds
|
| *received whack message
| Added new connection roadnet-eastnet-ipv4-psk-ikev2 with policy PSK+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW
| counting wild cards for @road is 0
| counting wild cards for @east is 0
| add new addresspool to global pools 192.0.2.1-192.0.2.200 size 200 ptr 0x7fb50e117fa8
| based upon policy narrowing=yes, the connection is a template.
| connect_to_host_pair: 192.1.2.23:500 192.1.3.209:500 -> hp:none
added connection description "roadnet-eastnet-ipv4-psk-ikev2"
| 0.0.0.0/0===192.1.2.23<192.1.2.23>[@east]...192.1.3.209<192.1.3.209>[@road,+MC+S=C]
| ike_life: 3600s; ipsec_life: 28800s; rekey_margin: 540s; rekey_fuzz: 100%; keyingtries: 0; policy: PSK+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 58 seconds
| next event EVENT_PENDING_DDNS in 58 seconds
|
| *received whack message
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 58 seconds
| next event EVENT_PENDING_DDNS in 58 seconds
|
| *received 664 bytes from 192.1.3.209:500 on eth2 (port=500)
|   eb 68 75 06  3d f3 09 7e  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 98  22 00 01 18
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  00 00 00 ec  02 01 00 1b
|   03 00 00 0c  01 00 00 0c  80 0e 00 80  03 00 00 0c
|   01 00 00 0c  80 0e 00 c0  03 00 00 0c  01 00 00 0c
|   80 0e 01 00  03 00 00 08  01 00 00 03  03 00 00 08
|   03 00 00 05  03 00 00 08  03 00 00 08  03 00 00 08
|   03 00 00 02  03 00 00 08  03 00 00 01  03 00 00 08
|   03 00 00 0c  03 00 00 08  03 00 00 0d  03 00 00 08
|   03 00 00 0e  03 00 00 08  02 00 00 04  03 00 00 08
|   02 00 00 08  03 00 00 08  02 00 00 02  03 00 00 08
|   02 00 00 01  03 00 00 08  02 00 00 05  03 00 00 08
|   02 00 00 06  03 00 00 08  02 00 00 07  03 00 00 08
|   04 00 00 0e  03 00 00 08  04 00 00 17  03 00 00 08
|   04 00 00 18  03 00 00 08  04 00 00 05  03 00 00 08
|   04 00 00 0f  03 00 00 08  04 00 00 10  03 00 00 08
|   04 00 00 12  03 00 00 08  04 00 00 02  00 00 00 08
|   04 00 00 16  28 00 01 08  00 0e 00 00  89 08 2a 73
|   42 36 58 f3  e0 58 75 df  9b 3c 19 e8  2a 58 68 2b
|   5b c9 17 93  01 ad f5 b2  1c 4d 43 e0  c4 c1 d6 96
|   a7 6b 5b df  33 4e c4 ac  7b 40 f5 2e  07 35 62 44
|   da 72 7b 74  b9 83 8e 8c  e1 37 73 6d  0e 56 b8 c0
|   aa a0 d3 97  a6 a2 78 d0  ab 5b 45 c5  f0 82 90 a9
|   62 b7 01 ef  8b 50 09 41  d0 d2 ca e5  6e 08 31 c3
|   81 b1 1e d6  c7 58 19 51  0e 6d bd c1  9d 0c 97 9b
|   28 b0 7a e1  53 a4 25 e3  da 0f ec de  e8 8d dc 17
|   d0 cb 8b 43  82 02 32 ff  17 fb 54 a0  cf f0 67 d1
|   55 1b 9d 1e  24 75 a2 a7  46 a6 f5 7c  96 98 5d 7f
|   af 71 6e 05  07 7d 97 b6  68 e6 54 e2  c3 31 46 63
|   03 eb 33 bd  ff 97 cc d8  ac 97 25 e2  04 cd bb 4c
|   c4 03 0a 59  d9 15 2a cd  60 e7 80 9a  b0 92 69 62
|   96 cc 91 2e  d3 d6 12 b8  97 d0 4e 77  d4 f0 b9 ce
|   7e ae 73 57  26 42 c0 fc  61 2d d3 3e  6a 5a a0 52
|   f9 57 94 45  e3 0d 9b d6  b1 1c 11 29  29 00 00 24
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
|   29 00 00 1c  00 00 40 04  19 00 f3 40  78 53 f5 cb
|   45 c6 38 8a  98 14 24 95  ed fa 03 d2  00 00 00 1c
|   00 00 40 05  d9 02 2f 1d  a3 b4 39 d1  59 d0 93 1c
|   dc c8 98 c2  f8 19 29 5e
| **parse ISAKMP Message:
|    initiator cookie:
|   eb 68 75 06  3d f3 09 7e
|    responder cookie:
|   00 00 00 00  00 00 00 00
|    next payload type: ISAKMP_NEXT_v2SA
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_SA_INIT
|    flags: ISAKMP_FLAG_v2_IKE_INIT
|    message ID:  00 00 00 00
|    length: 664
|  processing version=2.0 packet with exchange type=ISAKMP_v2_SA_INIT (34)
| I am receiving an IKE Request
| I am the IKE SA Original Responder
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 25
| parent v2 state object not found
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  00 00 00 00  00 00 00 00
| state hash entry 25
| parent_init v2 state object not found
| selected state microcode Respond to IKE_SA_INIT
| Now let's proceed with payload (ISAKMP_NEXT_v2SA)
| ***parse IKEv2 Security Association Payload:
|    next payload type: ISAKMP_NEXT_v2KE
|    flags: none
|    length: 280
| processing payload: ISAKMP_NEXT_v2SA (len=280)
| Now let's proceed with payload (ISAKMP_NEXT_v2KE)
| ***parse IKEv2 Key Exchange Payload:
|    IKEv2 next payload type: ISAKMP_NEXT_v2Ni
|    flags: none
|    length: 264
|    DH group: OAKLEY_GROUP_MODP2048
| processing payload: ISAKMP_NEXT_v2KE (len=264)
| Now let's proceed with payload (ISAKMP_NEXT_v2Ni)
| ***parse IKEv2 Nonce Payload:
|    next payload type: ISAKMP_NEXT_v2N
|    flags: none
|    length: 36
| processing payload: ISAKMP_NEXT_v2Ni (len=36)
| Now let's proceed with payload (ISAKMP_NEXT_v2N)
| ***parse IKEv2 Notify Payload:
|    next payload type: ISAKMP_NEXT_v2N
|    flags: none
|    length: 28
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_SOURCE_IP
| processing payload: ISAKMP_NEXT_v2N (len=28)
| Now let's proceed with payload (ISAKMP_NEXT_v2N)
| ***parse IKEv2 Notify Payload:
|    next payload type: ISAKMP_NEXT_v2NONE
|    flags: none
|    length: 28
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_DESTINATION_IP
| processing payload: ISAKMP_NEXT_v2N (len=28)
| Now let's proceed with state specific processing
| calling processor Respond to IKE_SA_INIT
| will not send/process a dcookie
| find_host_connection me=192.1.2.23:500 him=192.1.3.209:500 policy=IKEV2_ALLOW
| find_host_pair: comparing to 192.1.2.23:500 192.1.3.209:500
| find_host_pair_conn (find_host_connection): 192.1.2.23:500 192.1.3.209:500 -> hp:roadnet-eastnet-ipv4-psk-ikev2
| searching for connection with policy = IKEV2_ALLOW
| found policy = PSK+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW (roadnet-eastnet-ipv4-psk-ikev2)
| find_host_connection returns roadnet-eastnet-ipv4-psk-ikev2
| local endpoint has narrowing=yes - needs instantiation
| find_host_pair: comparing to 192.1.2.23:500 192.1.3.209:500
| connect_to_host_pair: 192.1.2.23:500 192.1.3.209:500 -> hp:roadnet-eastnet-ipv4-psk-ikev2
| instantiated "roadnet-eastnet-ipv4-psk-ikev2" for 192.1.3.209
| found connection: roadnet-eastnet-ipv4-psk-ikev2
| creating state object #1 at 0x7fb50e17e8c8
| processing connection roadnet-eastnet-ipv4-psk-ikev2[1] 192.1.3.209
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  27 ea 14 3b  d1 bb 4f 51
| state hash entry 7
| inserting state object #1
| inserting event EVENT_SO_DISCARD, timeout in 0 seconds for #1
| event added at head of queue
| processing connection roadnet-eastnet-ipv4-psk-ikev2[1] 192.1.3.209
| natd_hash: Warning, rcookie is zero !!
| natd_hash: hasher=0x7fb516062140(20)
| natd_hash: icookie=  eb 68 75 06  3d f3 09 7e
| natd_hash: rcookie=  00 00 00 00  00 00 00 00
| natd_hash: ip=  c0 01 02 17
| natd_hash: port=500
| natd_hash: hash=  d9 02 2f 1d  a3 b4 39 d1  59 d0 93 1c  dc c8 98 c2
| natd_hash: hash=  f8 19 29 5e
| natd_hash: Warning, rcookie is zero !!
| natd_hash: hasher=0x7fb516062140(20)
| natd_hash: icookie=  eb 68 75 06  3d f3 09 7e
| natd_hash: rcookie=  00 00 00 00  00 00 00 00
| natd_hash: ip=  c0 01 03 d1
| natd_hash: port=500
| natd_hash: hash=  19 00 f3 40  78 53 f5 cb  45 c6 38 8a  98 14 24 95
| natd_hash: hash=  ed fa 03 d2
| NAT_TRAVERSAL nat_keepalive enabled 192.1.3.209
| crypto helper 0: pcw_work: 0
| asking crypto helper 0 to do build KE and nonce; request ID 1 (len=2768, pcw_work=0)
| crypto helper 0 read fd: 9
| crypto helper 0 doing build KE and nonce; request ID 1
| NSS: Value of Prime:
|   ff ff ff ff  ff ff ff ff  c9 0f da a2  21 68 c2 34
|   c4 c6 62 8b  80 dc 1c d1  29 02 4e 08  8a 67 cc 74
|   02 0b be a6  3b 13 9b 22  51 4a 08 79  8e 34 04 dd
|   ef 95 19 b3  cd 3a 43 1b  30 2b 0a 6d  f2 5f 14 37
|   4f e1 35 6d  6d 51 c2 45  e4 85 b5 76  62 5e 7e c6
|   f4 4c 42 e9  a6 37 ed 6b  0b ff 5c b6  f4 06 b7 ed
|   ee 38 6b fb  5a 89 9f a5  ae 9f 24 11  7c 4b 1f e6
|   49 28 66 51  ec e4 5b 3d  c2 00 7c b8  a1 63 bf 05
|   98 da 48 36  1c 55 d3 9a  69 16 3f a8  fd 24 cf 5f
|   83 65 5d 23  dc a3 ad 96  1c 62 f3 56  20 85 52 bb
|   9e d5 29 07  70 96 96 6d  67 0c 35 4e  4a bc 98 04
|   f1 74 6c 08  ca 18 21 7c  32 90 5e 46  2e 36 ce 3b
|   e3 9e 77 2c  18 0e 86 03  9b 27 83 a2  ec 07 a2 8f
|   b5 c5 5d f0  6f 4c 52 c9  de 2b cb f6  95 58 17 18
|   39 95 49 7c  ea 95 6a e5  15 d2 26 18  98 fa 05 10
|   15 72 8e 5a  8a ac aa 68  ff ff ff ff  ff ff ff ff
| NSS: Value of base:  02
| #1 send_crypto_helper_request:550 st->st_calculating = TRUE;
| deleting event for #1
| inserting event EVENT_CRYPTO_FAILED, timeout in 300 seconds for #1
| event added after event EVENT_PENDING_PHASE2
| complete v2 state transition with STF_SUSPEND
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 52 seconds
| next event EVENT_PENDING_DDNS in 52 seconds
| NSS: generated dh priv and pub keys: 256
| NSS: Local DH secret (pointer): 0x7fb50e1b9820
| NSS: Public DH value sent(computed in NSS):
|   89 fd fd a6  6b a5 8b 94  d3 c6 35 dc  b9 84 a0 54
|   7f 50 a1 e9  9f 9a 8c d7  0a 9d b6 bc  ae b3 b1 e7
|   f8 88 d2 e9  51 cf 53 6a  9a d3 87 07  11 d4 40 8a
|   ad 2f af f9  c9 a5 c7 f1  d8 d9 4c 87  3c 3c 0b c7
|   94 b4 84 11  b7 cd d4 b4  72 6d 21 ca  b7 91 3f f8
|   84 36 9b 33  83 9b 23 a1  c6 e7 a2 54  3c b3 8c be
|   4e 3b 23 c9  0c 19 b9 fc  17 25 e3 4a  66 7f 07 0d
|   96 79 03 06  26 c9 35 06  b1 27 38 1f  78 2a d5 a0
|   20 8f 0e 14  84 d8 f6 8d  c2 22 a5 0a  89 b9 4b 26
|   c2 c5 79 3e  4d 6c 27 8b  58 b5 47 05  57 43 68 29
|   85 95 c1 ae  ed 57 b2 9f  88 32 07 7a  f9 ee be 40
|   e6 44 a9 d2  2e 6f b0 74  28 89 ca c0  ce 15 25 15
|   f2 b3 b3 63  e5 60 78 9e  0e d5 01 7a  9e 47 5e 18
|   b3 85 e4 66  29 64 bf 8b  19 d4 ef a5  64 07 0d f0
|   17 87 8b 4f  a9 18 d8 31  e3 59 b4 9d  2e 4f 28 8c
|   48 6c 45 11  ff de eb eb  49 d4 c0 d6  62 b3 9b 4c
| NSS: Local DH public value (pointer): 0x7fb50e1b7820
| Generated nonce:  2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
|
| crypto helper 0 has finished work (pcw_work now 1)
| crypto helper 0 replies to request ID 1
| calling continuation function 0x7fb515d84bd5
| ikev2_parent_inI1outR1_continue for #1: calculated ke+nonce, sending R1
| processing connection roadnet-eastnet-ipv4-psk-ikev2[1] 192.1.3.209
| #1 ikev2_parent_inI1outR1_continue:862 st->st_calculating = FALSE;
| **emit ISAKMP Message:
|    initiator cookie:
|   eb 68 75 06  3d f3 09 7e
|    responder cookie:
|   27 ea 14 3b  d1 bb 4f 51
|    next payload type: ISAKMP_NEXT_v2SA
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_SA_INIT
|    flags: ISAKMP_FLAG_v2_MSG_RESPONSE
|    message ID:  00 00 00 00
| ***emit IKEv2 Security Association Payload:
|    next payload type: ISAKMP_NEXT_v2KE
|    flags: none
| no specific IKE algorithms specified - using defaults
| ****parse IKEv2 Proposal Substructure Payload:
|    last proposal: v2_PROPOSAL_NON_LAST
|    length: 40
|    prop #: 1
|    proto ID: IKEv2_SEC_PROTO_IKE
|    spi size: 0
|    # transforms: 4
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: 3DES
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_MD5_96
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_MD5
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP2048
| ipprotoid is '1'
| considering Transform Type TRANS_TYPE_ENCR, TransID 12
| IKEv2_KEY_LENGTH attribute 256
| encrid(12), keylen(256), encr_keylen(-1)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
| considering Transform Type TRANS_TYPE_INTEG, TransID 2
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-2) vs offered:AUTH_HMAC_MD5_96(-1))
| considering Transform Type TRANS_TYPE_PRF, TransID 2
|             failed prf=  (policy:PRF_HMAC_SHA1(-2) vs offered:PRF_HMAC_MD5(-1))
| considering Transform Type TRANS_TYPE_DH, TransID 14
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
|             failed integ=(policy:AUTH_HMAC_SHA1_96 vs offered:AUTH_HMAC_MD5_96)
|             failed prf=  (policy:PRF_HMAC_SHA1 vs offered:PRF_HMAC_MD5)
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| considering Transform Type TRANS_TYPE_ENCR, TransID 12
| IKEv2_KEY_LENGTH attribute 128
| encrid(12), keylen(128), encr_keylen(-1)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
| considering Transform Type TRANS_TYPE_INTEG, TransID 2
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-2) vs offered:AUTH_HMAC_MD5_96(-1))
| considering Transform Type TRANS_TYPE_PRF, TransID 2
|             failed prf=  (policy:PRF_HMAC_SHA1(-2) vs offered:PRF_HMAC_MD5(-1))
| considering Transform Type TRANS_TYPE_DH, TransID 14
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
|             failed integ=(policy:AUTH_HMAC_SHA1_96 vs offered:AUTH_HMAC_MD5_96)
|             failed prf=  (policy:PRF_HMAC_SHA1 vs offered:PRF_HMAC_MD5)
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| considering Transform Type TRANS_TYPE_ENCR, TransID 12
| IKEv2_KEY_LENGTH attribute 256
| encrid(12), keylen(256), encr_keylen(-1)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
| considering Transform Type TRANS_TYPE_INTEG, TransID 1
|             succeeded integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_MD5_96(-1))
| considering Transform Type TRANS_TYPE_PRF, TransID 1
|             succeeded prf=  (policy:PRF_HMAC_MD5(-1) vs offered:PRF_HMAC_MD5(-1))
| considering Transform Type TRANS_TYPE_DH, TransID 14
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
|             succeeded integ=(policy:AUTH_HMAC_MD5_96 vs offered:AUTH_HMAC_MD5_96)
|             succeeded prf=  (policy:PRF_HMAC_MD5 vs offered:PRF_HMAC_MD5)
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| considering Transform Type TRANS_TYPE_ENCR, TransID 12
| IKEv2_KEY_LENGTH attribute 128
| encrid(12), keylen(128), encr_keylen(-1)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
| considering Transform Type TRANS_TYPE_INTEG, TransID 1
|             succeeded integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_MD5_96(-1))
| considering Transform Type TRANS_TYPE_PRF, TransID 1
|             succeeded prf=  (policy:PRF_HMAC_MD5(-1) vs offered:PRF_HMAC_MD5(-1))
| considering Transform Type TRANS_TYPE_DH, TransID 14
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| proposal 1 failed encr= (policy:AES_CBC(-2) vs offered:3DES(-1))
|             succeeded integ=(policy:AUTH_HMAC_MD5_96 vs offered:AUTH_HMAC_MD5_96)
|             succeeded prf=  (policy:PRF_HMAC_MD5 vs offered:PRF_HMAC_MD5)
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| considering Transform Type TRANS_TYPE_ENCR, TransID 3
| encrid(3), keylen(-1), encr_keylen(-1)
| proposal 1 succeeded encr= (policy:3DES(-1) vs offered:3DES(-1))
| considering Transform Type TRANS_TYPE_INTEG, TransID 2
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-2) vs offered:AUTH_HMAC_MD5_96(-1))
| considering Transform Type TRANS_TYPE_PRF, TransID 2
|             failed prf=  (policy:PRF_HMAC_SHA1(-2) vs offered:PRF_HMAC_MD5(-1))
| considering Transform Type TRANS_TYPE_DH, TransID 14
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| proposal 1 succeeded encr= (policy:3DES(-1) vs offered:3DES(-1))
|             failed integ=(policy:AUTH_HMAC_SHA1_96 vs offered:AUTH_HMAC_MD5_96)
|             failed prf=  (policy:PRF_HMAC_SHA1 vs offered:PRF_HMAC_MD5)
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| considering Transform Type TRANS_TYPE_ENCR, TransID 3
| encrid(3), keylen(-1), encr_keylen(-1)
| proposal 1 succeeded encr= (policy:3DES(-1) vs offered:3DES(-1))
| considering Transform Type TRANS_TYPE_INTEG, TransID 1
|             succeeded integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_MD5_96(-1))
| considering Transform Type TRANS_TYPE_PRF, TransID 1
|             succeeded prf=  (policy:PRF_HMAC_MD5(-1) vs offered:PRF_HMAC_MD5(-1))
| considering Transform Type TRANS_TYPE_DH, TransID 14
|             succeeded dh=   (policy:OAKLEY_GROUP_MODP2048 vs offered:OAKLEY_GROUP_MODP2048)
| ****parse IKEv2 Proposal Substructure Payload:
|    last proposal: v2_PROPOSAL_LAST
|    length: 236
|    prop #: 2
|    proto ID: IKEv2_SEC_PROTO_IKE
|    spi size: 0
|    # transforms: 27
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| ******parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 128
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| ******parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 192
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| ******parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 256
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: 3DES
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_AES_XCBC_96
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_AES_CMAC_96
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_SHA1_96
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_MD5_96
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_SHA2_256_128
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_SHA2_384_192
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_SHA2_512_256
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_AES128-XCBC
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: IKEv2_PRF_AES128_CMAC
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_SHA1
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_MD5
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_SHA2-256
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_SHA2-384
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_SHA2-512
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP2048
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_DH23
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_DH24
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP1536
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP3072
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP4096
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP8192
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP1024
| *****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_DH22
| ****emit IKEv2 Proposal Substructure Payload:
|    last proposal: v2_PROPOSAL_LAST
|    prop #: 1
|    proto ID: IKEv2_SEC_PROTO_IKE
|    spi size: 0
|    # transforms: 4
| *****emit IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: 3DES
| keysize is NOT required - NOT sent key length attribute
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_MD5_96
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    IKEv2 transform type: TRANS_TYPE_PRF
|    IKEv2 transform ID: PRF_HMAC_MD5
| emitting length of IKEv2 Transform Substructure Payload: 8
| *****emit IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_LAST
|    IKEv2 transform type: TRANS_TYPE_DH
|    IKEv2 transform ID: OAKLEY_GROUP_MODP2048
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 40
| emitting length of IKEv2 Security Association Payload: 44
| DH public value received:
|   89 08 2a 73  42 36 58 f3  e0 58 75 df  9b 3c 19 e8
|   2a 58 68 2b  5b c9 17 93  01 ad f5 b2  1c 4d 43 e0
|   c4 c1 d6 96  a7 6b 5b df  33 4e c4 ac  7b 40 f5 2e
|   07 35 62 44  da 72 7b 74  b9 83 8e 8c  e1 37 73 6d
|   0e 56 b8 c0  aa a0 d3 97  a6 a2 78 d0  ab 5b 45 c5
|   f0 82 90 a9  62 b7 01 ef  8b 50 09 41  d0 d2 ca e5
|   6e 08 31 c3  81 b1 1e d6  c7 58 19 51  0e 6d bd c1
|   9d 0c 97 9b  28 b0 7a e1  53 a4 25 e3  da 0f ec de
|   e8 8d dc 17  d0 cb 8b 43  82 02 32 ff  17 fb 54 a0
|   cf f0 67 d1  55 1b 9d 1e  24 75 a2 a7  46 a6 f5 7c
|   96 98 5d 7f  af 71 6e 05  07 7d 97 b6  68 e6 54 e2
|   c3 31 46 63  03 eb 33 bd  ff 97 cc d8  ac 97 25 e2
|   04 cd bb 4c  c4 03 0a 59  d9 15 2a cd  60 e7 80 9a
|   b0 92 69 62  96 cc 91 2e  d3 d6 12 b8  97 d0 4e 77
|   d4 f0 b9 ce  7e ae 73 57  26 42 c0 fc  61 2d d3 3e
|   6a 5a a0 52  f9 57 94 45  e3 0d 9b d6  b1 1c 11 29
| saving DH priv (local secret) and pub key into state struct
| ***emit IKEv2 Key Exchange Payload:
|    IKEv2 next payload type: ISAKMP_NEXT_v2Ni
|    flags: none
|    DH group: OAKLEY_GROUP_MODP2048
| emitting 256 raw bytes of ikev2 g^x into IKEv2 Key Exchange Payload
| ikev2 g^x  89 fd fd a6  6b a5 8b 94  d3 c6 35 dc  b9 84 a0 54
| ikev2 g^x  7f 50 a1 e9  9f 9a 8c d7  0a 9d b6 bc  ae b3 b1 e7
| ikev2 g^x  f8 88 d2 e9  51 cf 53 6a  9a d3 87 07  11 d4 40 8a
| ikev2 g^x  ad 2f af f9  c9 a5 c7 f1  d8 d9 4c 87  3c 3c 0b c7
| ikev2 g^x  94 b4 84 11  b7 cd d4 b4  72 6d 21 ca  b7 91 3f f8
| ikev2 g^x  84 36 9b 33  83 9b 23 a1  c6 e7 a2 54  3c b3 8c be
| ikev2 g^x  4e 3b 23 c9  0c 19 b9 fc  17 25 e3 4a  66 7f 07 0d
| ikev2 g^x  96 79 03 06  26 c9 35 06  b1 27 38 1f  78 2a d5 a0
| ikev2 g^x  20 8f 0e 14  84 d8 f6 8d  c2 22 a5 0a  89 b9 4b 26
| ikev2 g^x  c2 c5 79 3e  4d 6c 27 8b  58 b5 47 05  57 43 68 29
| ikev2 g^x  85 95 c1 ae  ed 57 b2 9f  88 32 07 7a  f9 ee be 40
| ikev2 g^x  e6 44 a9 d2  2e 6f b0 74  28 89 ca c0  ce 15 25 15
| ikev2 g^x  f2 b3 b3 63  e5 60 78 9e  0e d5 01 7a  9e 47 5e 18
| ikev2 g^x  b3 85 e4 66  29 64 bf 8b  19 d4 ef a5  64 07 0d f0
| ikev2 g^x  17 87 8b 4f  a9 18 d8 31  e3 59 b4 9d  2e 4f 28 8c
| ikev2 g^x  48 6c 45 11  ff de eb eb  49 d4 c0 d6  62 b3 9b 4c
| emitting length of IKEv2 Key Exchange Payload: 264
| ***emit IKEv2 Nonce Payload:
|    next payload type: ISAKMP_NEXT_v2N
|    flags: none
| emitting 16 raw bytes of IKEv2 nonce into IKEv2 Nonce Payload
| IKEv2 nonce  2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| emitting length of IKEv2 Nonce Payload: 20
|  NAT-Traversal support  [enabled] add v2N payloads.
| natd_hash: hasher=0x7fb516062140(20)
| natd_hash: icookie=  eb 68 75 06  3d f3 09 7e
| natd_hash: rcookie=  27 ea 14 3b  d1 bb 4f 51
| natd_hash: ip=  c0 01 02 17
| natd_hash: port=500
| natd_hash: hash=  35 9b 38 f8  9c 41 97 78  9a aa 5a 8a  83 91 34 64
| natd_hash: hash=  f3 f4 46 f6
| Adding a v2N Payload
| ***emit IKEv2 Notify Payload:
|    next payload type: ISAKMP_NEXT_v2N
|    flags: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_SOURCE_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  35 9b 38 f8  9c 41 97 78  9a aa 5a 8a  83 91 34 64
| Notify data  f3 f4 46 f6
| emitting length of IKEv2 Notify Payload: 28
| natd_hash: hasher=0x7fb516062140(20)
| natd_hash: icookie=  eb 68 75 06  3d f3 09 7e
| natd_hash: rcookie=  27 ea 14 3b  d1 bb 4f 51
| natd_hash: ip=  c0 01 03 d1
| natd_hash: port=500
| natd_hash: hash=  0e 70 94 60  c2 02 98 d7  14 a7 3b 60  26 8a ba b2
| natd_hash: hash=  53 e2 39 51
| Adding a v2N Payload
| ***emit IKEv2 Notify Payload:
|    next payload type: ISAKMP_NEXT_v2NONE
|    flags: none
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_NAT_DETECTION_DESTINATION_IP
| emitting 20 raw bytes of Notify data into IKEv2 Notify Payload
| Notify data  0e 70 94 60  c2 02 98 d7  14 a7 3b 60  26 8a ba b2
| Notify data  53 e2 39 51
| emitting length of IKEv2 Notify Payload: 28
| no IKE message padding required
| emitting length of ISAKMP Message: 412
| complete v2 state transition from STATE_PARENT_R1 with STF_OK
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #1: transition from state STATE_IKEv2_START to state STATE_PARENT_R1
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #1: STATE_PARENT_R1: received v2I1, sent v2R1 {auth=IKEv2 cipher=oakley_3des_cbc_192 integ=md5_96 prf=md5 group=MODP2048}
| sending reply packet to 192.1.3.209:500 (from port 500)
| sending 412 bytes for STATE_IKEv2_START through eth2:500 to 192.1.3.209:500 (using #1)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   21 20 22 20  00 00 00 00  00 00 01 9c  22 00 00 2c
|   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  28 00 01 08  00 0e 00 00
|   89 fd fd a6  6b a5 8b 94  d3 c6 35 dc  b9 84 a0 54
|   7f 50 a1 e9  9f 9a 8c d7  0a 9d b6 bc  ae b3 b1 e7
|   f8 88 d2 e9  51 cf 53 6a  9a d3 87 07  11 d4 40 8a
|   ad 2f af f9  c9 a5 c7 f1  d8 d9 4c 87  3c 3c 0b c7
|   94 b4 84 11  b7 cd d4 b4  72 6d 21 ca  b7 91 3f f8
|   84 36 9b 33  83 9b 23 a1  c6 e7 a2 54  3c b3 8c be
|   4e 3b 23 c9  0c 19 b9 fc  17 25 e3 4a  66 7f 07 0d
|   96 79 03 06  26 c9 35 06  b1 27 38 1f  78 2a d5 a0
|   20 8f 0e 14  84 d8 f6 8d  c2 22 a5 0a  89 b9 4b 26
|   c2 c5 79 3e  4d 6c 27 8b  58 b5 47 05  57 43 68 29
|   85 95 c1 ae  ed 57 b2 9f  88 32 07 7a  f9 ee be 40
|   e6 44 a9 d2  2e 6f b0 74  28 89 ca c0  ce 15 25 15
|   f2 b3 b3 63  e5 60 78 9e  0e d5 01 7a  9e 47 5e 18
|   b3 85 e4 66  29 64 bf 8b  19 d4 ef a5  64 07 0d f0
|   17 87 8b 4f  a9 18 d8 31  e3 59 b4 9d  2e 4f 28 8c
|   48 6c 45 11  ff de eb eb  49 d4 c0 d6  62 b3 9b 4c
|   29 00 00 14  2c 12 25 90  56 49 63 75  90 2e 85 46
|   06 33 75 92  29 00 00 1c  00 00 40 04  35 9b 38 f8
|   9c 41 97 78  9a aa 5a 8a  83 91 34 64  f3 f4 46 f6
|   00 00 00 1c  00 00 40 05  0e 70 94 60  c2 02 98 d7
|   14 a7 3b 60  26 8a ba b2  53 e2 39 51
| deleting event for #1
| inserting event EVENT_v2_RESPONDER_TIMEOUT, timeout in 200 seconds for #1
| event added after event EVENT_PENDING_PHASE2
| * processed 1 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 52 seconds
| next event EVENT_PENDING_DDNS in 52 seconds
|
| *received 356 bytes from 192.1.3.209:500 on eth2 (port=500)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 08  00 00 00 01  00 00 01 64  23 00 01 48
|   a3 a1 21 54  98 f0 65 6e  2e 8a 43 04  d7 73 d0 b2
|   70 ed d5 50  ba 8e d2 cf  19 d0 6a 2f  14 c1 43 cd
|   b8 9c c2 b8  96 9f e3 bd  d9 21 98 a0  14 1d 46 19
|   07 d3 9d b3  34 fa 5a a5  9d 2d b4 3a  1a 38 d6 00
|   74 3b 80 96  42 01 b8 1f  94 11 f7 ea  95 f5 45 a1
|   6a 72 71 ae  e9 4a 23 f0  b1 4c dd f8  2c 95 f1 2a
|   9e 47 02 94  ec 4b d0 ae  81 74 da 9e  63 ef 01 db
|   6e a5 04 d1  bc e6 32 f5  d2 58 1e d9  2a d5 11 51
|   0f 69 f8 f9  14 39 06 95  4a 36 ea 90  cc 4a a2 4d
|   1a 05 7a 6b  75 34 53 56  bc b8 e7 f1  cb ff 9d 3d
|   fd d6 a6 3b  87 c8 0d 7d  49 16 de c7  56 a2 d9 bd
|   75 7e a4 66  ef d3 df 2f  5d 4b 9a da  bc a0 52 b1
|   9a b8 19 42  ec 08 04 88  e0 53 aa 26  5f db 80 ed
|   e8 2a fa 39  a3 05 7f 37  04 27 84 f8  2f ce 84 14
|   89 02 02 12  50 57 51 eb  6d 70 c1 7e  75 a8 12 ca
|   e1 63 0a b8  45 8b 86 d2  a2 44 16 fd  0f b7 3d e7
|   34 dd 39 7d  e3 7a ac 6a  7e 09 23 b0  ed d1 37 6f
|   d7 38 be 4e  35 3d 6d 70  32 d5 19 b2  07 81 0f e9
|   e8 59 83 d5  40 e3 1a b6  f6 9c 1b 8e  bb fc 1e b2
|   8b 5a 2a fd  b3 88 e4 5e  40 b8 ea c3  a2 bc 52 5b
|   a6 f3 f0 4c
| **parse ISAKMP Message:
|    initiator cookie:
|   eb 68 75 06  3d f3 09 7e
|    responder cookie:
|   27 ea 14 3b  d1 bb 4f 51
|    next payload type: ISAKMP_NEXT_v2E
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_v2_IKE_INIT
|    message ID:  00 00 00 01
|    length: 356
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35)
| I am receiving an IKE Request
| I am the IKE SA Original Responder
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  27 ea 14 3b  d1 bb 4f 51
| state hash entry 7
| parent v2 peer and cookies match on #1
| v2 state object #1 found, in STATE_PARENT_R1
| state found and its state is STATE_PARENT_R1
| selected state microcode respond to IKE_AUTH
| #1 state_busy:1865 st != NULL && st->st_calculating == FALSE;
| processing connection roadnet-eastnet-ipv4-psk-ikev2[1] 192.1.3.209
| Now let's proceed with payload (ISAKMP_NEXT_v2E)
| ***parse IKEv2 Encryption Payload:
|    next payload type: ISAKMP_NEXT_v2IDi
|    flags: none
|    length: 328
| processing payload: ISAKMP_NEXT_v2E (len=328)
| Now let's proceed with state specific processing
| calling processor respond to IKE_AUTH
| ikev2 parent inI2outR2: calculating g^{xy} in order to decrypt I2
| calculating skeyseed using prf=PRF_HMAC_MD5 integ=AUTH_HMAC_MD5_96 cipherkey=3DES
| Copying DH pub key pointer to be sent to a thread helper
| crypto helper 0: pcw_work: 0
| asking crypto helper 0 to do compute dh (V2); request ID 2 (len=2768, pcw_work=0)
| crypto helper 0 read fd: 9
| crypto helper 0 doing compute dh (V2); request ID 2
| peer's g:   89 08 2a 73  42 36 58 f3  e0 58 75 df  9b 3c 19 e8
| peer's g:   2a 58 68 2b  5b c9 17 93  01 ad f5 b2  1c 4d 43 e0
| peer's g:   c4 c1 d6 96  a7 6b 5b df  33 4e c4 ac  7b 40 f5 2e
| peer's g:   07 35 62 44  da 72 7b 74  b9 83 8e 8c  e1 37 73 6d
| peer's g:   0e 56 b8 c0  aa a0 d3 97  a6 a2 78 d0  ab 5b 45 c5
| peer's g:   f0 82 90 a9  62 b7 01 ef  8b 50 09 41  d0 d2 ca e5
| peer's g:   6e 08 31 c3  81 b1 1e d6  c7 58 19 51  0e 6d bd c1
| peer's g:   9d 0c 97 9b  28 b0 7a e1  53 a4 25 e3  da 0f ec de
| peer's g:   e8 8d dc 17  d0 cb 8b 43  82 02 32 ff  17 fb 54 a0
| peer's g:   cf f0 67 d1  55 1b 9d 1e  24 75 a2 a7  46 a6 f5 7c
| peer's g:   96 98 5d 7f  af 71 6e 05  07 7d 97 b6  68 e6 54 e2
| peer's g:   c3 31 46 63  03 eb 33 bd  ff 97 cc d8  ac 97 25 e2
| peer's g:   04 cd bb 4c  c4 03 0a 59  d9 15 2a cd  60 e7 80 9a
| peer's g:   b0 92 69 62  96 cc 91 2e  d3 d6 12 b8  97 d0 4e 77
| peer's g:   d4 f0 b9 ce  7e ae 73 57  26 42 c0 fc  61 2d d3 3e
| peer's g:   6a 5a a0 52  f9 57 94 45  e3 0d 9b d6  b1 1c 11 29
| Started DH shared-secret computation in NSS:
| Dropped no leading zeros 256
| calc_dh_shared(): time elapsed (OAKLEY_GROUP_MODP2048): 3641 usec
| NSS: Started key computation
| calculating skeyseed using prf=PRF_HMAC_MD5 integ=AUTH_HMAC_MD5_96 cipherkey=24
| skeyid inputs (digi+NI+NR+shared) hasher: oakley_md5
| #1 send_crypto_helper_request:550 st->st_calculating = TRUE;
| deleting event for #1
| inserting event EVENT_CRYPTO_FAILED, timeout in 300 seconds for #1
| event added after event EVENT_PENDING_PHASE2
| complete v2 state transition with STF_SUSPEND
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 52 seconds
| next event EVENT_PENDING_DDNS in 52 seconds
| ni:   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
| ni:   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| nr:   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| NSS: digisig skeyid pointer: 0x7fb50e094f80
| PRF+ input
| Ni  4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
| Ni  80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| Nr  2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| SPIi  eb 68 75 06  3d f3 09 7e
| SPIr  27 ea 14 3b  d1 bb 4f 51
| Total keysize needed 128
| NSS ikev2: finished computing key material for IKEv2 SA
| NSS ikev2: finished computing individual keys for IKEv2 SA
| calc_skeyseed_v2 pointers: shared 0x7fb50e05af80, skeyseed 0x7fb50e094f80, SK_d 0x7fb50e08df80, SK_ai 0x7fb50e087f80, SK_ar 0x7fb50e0b2f80, SK_ei 0x7fb50e078f80, SK_er 0x7fb50e06bf80, SK_pi 0x7fb50e0c1f80, SK_pr 0x7fb50ded1f80
|
| crypto helper 0 has finished work (pcw_work now 1)
| crypto helper 0 replies to request ID 2
| calling continuation function 0x7fb515d87330
| ikev2_parent_inI2outR2_continue for #1: calculating g^{xy}, sending R2
| processing connection roadnet-eastnet-ipv4-psk-ikev2[1] 192.1.3.209
| #1 ikev2_parent_inI2outR2_continue:1972 st->st_calculating = FALSE;
| hmac_update data value:
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 08  00 00 00 01  00 00 01 64  23 00 01 48
|   a3 a1 21 54  98 f0 65 6e  2e 8a 43 04  d7 73 d0 b2
|   70 ed d5 50  ba 8e d2 cf  19 d0 6a 2f  14 c1 43 cd
|   b8 9c c2 b8  96 9f e3 bd  d9 21 98 a0  14 1d 46 19
|   07 d3 9d b3  34 fa 5a a5  9d 2d b4 3a  1a 38 d6 00
|   74 3b 80 96  42 01 b8 1f  94 11 f7 ea  95 f5 45 a1
|   6a 72 71 ae  e9 4a 23 f0  b1 4c dd f8  2c 95 f1 2a
|   9e 47 02 94  ec 4b d0 ae  81 74 da 9e  63 ef 01 db
|   6e a5 04 d1  bc e6 32 f5  d2 58 1e d9  2a d5 11 51
|   0f 69 f8 f9  14 39 06 95  4a 36 ea 90  cc 4a a2 4d
|   1a 05 7a 6b  75 34 53 56  bc b8 e7 f1  cb ff 9d 3d
|   fd d6 a6 3b  87 c8 0d 7d  49 16 de c7  56 a2 d9 bd
|   75 7e a4 66  ef d3 df 2f  5d 4b 9a da  bc a0 52 b1
|   9a b8 19 42  ec 08 04 88  e0 53 aa 26  5f db 80 ed
|   e8 2a fa 39  a3 05 7f 37  04 27 84 f8  2f ce 84 14
|   89 02 02 12  50 57 51 eb  6d 70 c1 7e  75 a8 12 ca
|   e1 63 0a b8  45 8b 86 d2  a2 44 16 fd  0f b7 3d e7
|   34 dd 39 7d  e3 7a ac 6a  7e 09 23 b0  ed d1 37 6f
|   d7 38 be 4e  35 3d 6d 70  32 d5 19 b2  07 81 0f e9
|   e8 59 83 d5  40 e3 1a b6  f6 9c 1b 8e  bb fc 1e b2
|   8b 5a 2a fd  b3 88 e4 5e
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| data for hmac:  eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
| data for hmac:  2e 20 23 08  00 00 00 01  00 00 01 64  23 00 01 48
| data for hmac:  a3 a1 21 54  98 f0 65 6e  2e 8a 43 04  d7 73 d0 b2
| data for hmac:  70 ed d5 50  ba 8e d2 cf  19 d0 6a 2f  14 c1 43 cd
| data for hmac:  b8 9c c2 b8  96 9f e3 bd  d9 21 98 a0  14 1d 46 19
| data for hmac:  07 d3 9d b3  34 fa 5a a5  9d 2d b4 3a  1a 38 d6 00
| data for hmac:  74 3b 80 96  42 01 b8 1f  94 11 f7 ea  95 f5 45 a1
| data for hmac:  6a 72 71 ae  e9 4a 23 f0  b1 4c dd f8  2c 95 f1 2a
| data for hmac:  9e 47 02 94  ec 4b d0 ae  81 74 da 9e  63 ef 01 db
| data for hmac:  6e a5 04 d1  bc e6 32 f5  d2 58 1e d9  2a d5 11 51
| data for hmac:  0f 69 f8 f9  14 39 06 95  4a 36 ea 90  cc 4a a2 4d
| data for hmac:  1a 05 7a 6b  75 34 53 56  bc b8 e7 f1  cb ff 9d 3d
| data for hmac:  fd d6 a6 3b  87 c8 0d 7d  49 16 de c7  56 a2 d9 bd
| data for hmac:  75 7e a4 66  ef d3 df 2f  5d 4b 9a da  bc a0 52 b1
| data for hmac:  9a b8 19 42  ec 08 04 88  e0 53 aa 26  5f db 80 ed
| data for hmac:  e8 2a fa 39  a3 05 7f 37  04 27 84 f8  2f ce 84 14
| data for hmac:  89 02 02 12  50 57 51 eb  6d 70 c1 7e  75 a8 12 ca
| data for hmac:  e1 63 0a b8  45 8b 86 d2  a2 44 16 fd  0f b7 3d e7
| data for hmac:  34 dd 39 7d  e3 7a ac 6a  7e 09 23 b0  ed d1 37 6f
| data for hmac:  d7 38 be 4e  35 3d 6d 70  32 d5 19 b2  07 81 0f e9
| data for hmac:  e8 59 83 d5  40 e3 1a b6  f6 9c 1b 8e  bb fc 1e b2
| data for hmac:  8b 5a 2a fd  b3 88 e4 5e
| calculated auth:  40 b8 ea c3  a2 bc 52 5b  a6 f3 f0 4c
|   provided auth:  40 b8 ea c3  a2 bc 52 5b  a6 f3 f0 4c
| authenticator matched
| data before decryption:
|   2e 8a 43 04  d7 73 d0 b2  70 ed d5 50  ba 8e d2 cf
|   19 d0 6a 2f  14 c1 43 cd  b8 9c c2 b8  96 9f e3 bd
|   d9 21 98 a0  14 1d 46 19  07 d3 9d b3  34 fa 5a a5
|   9d 2d b4 3a  1a 38 d6 00  74 3b 80 96  42 01 b8 1f
|   94 11 f7 ea  95 f5 45 a1  6a 72 71 ae  e9 4a 23 f0
|   b1 4c dd f8  2c 95 f1 2a  9e 47 02 94  ec 4b d0 ae
|   81 74 da 9e  63 ef 01 db  6e a5 04 d1  bc e6 32 f5
|   d2 58 1e d9  2a d5 11 51  0f 69 f8 f9  14 39 06 95
|   4a 36 ea 90  cc 4a a2 4d  1a 05 7a 6b  75 34 53 56
|   bc b8 e7 f1  cb ff 9d 3d  fd d6 a6 3b  87 c8 0d 7d
|   49 16 de c7  56 a2 d9 bd  75 7e a4 66  ef d3 df 2f
|   5d 4b 9a da  bc a0 52 b1  9a b8 19 42  ec 08 04 88
|   e0 53 aa 26  5f db 80 ed  e8 2a fa 39  a3 05 7f 37
|   04 27 84 f8  2f ce 84 14  89 02 02 12  50 57 51 eb
|   6d 70 c1 7e  75 a8 12 ca  e1 63 0a b8  45 8b 86 d2
|   a2 44 16 fd  0f b7 3d e7  34 dd 39 7d  e3 7a ac 6a
|   7e 09 23 b0  ed d1 37 6f  d7 38 be 4e  35 3d 6d 70
|   32 d5 19 b2  07 81 0f e9  e8 59 83 d5  40 e3 1a b6
|   f6 9c 1b 8e  bb fc 1e b2  8b 5a 2a fd  b3 88 e4 5e
| NSS: do_3des init start
| NSS: do_3des init end
| decrypted payload:  29 00 00 0c  02 00 00 00  72 6f 61 64  26 00 00 08
| decrypted payload:  00 00 40 00  24 00 00 19  04 bd 90 4b  4c 80 4f 2c
| decrypted payload:  08 fc 9b 03  a9 b8 7e 20  31 c4 e2 04  08 27 00 00
| decrypted payload:  0c 02 00 00  00 65 61 73  74 2f 00 00  18 02 00 00
| decrypted payload:  00 52 74 af  bf 0c 7a f5  35 e8 f3 e2  2a 59 3f 11
| decrypted payload:  47 21 00 00  10 01 00 00  00 00 01 00  00 00 03 00
| decrypted payload:  00 2c 00 00  90 02 00 00  28 01 03 04  03 c8 bc 39
| decrypted payload:  ed 03 00 00  0c 01 00 00  0c 80 0e 00  80 03 00 00
| decrypted payload:  08 03 00 00  0e 00 00 00  08 05 00 00  00 00 00 00
| decrypted payload:  64 02 03 04  09 c8 bc 39  ed 03 00 00  0c 01 00 00
| decrypted payload:  0c 80 0e 00  80 03 00 00  0c 01 00 00  0c 80 0e 00
| decrypted payload:  c0 03 00 00  0c 01 00 00  0c 80 0e 01  00 03 00 00
| decrypted payload:  08 01 00 00  03 03 00 00  0c 01 00 00  07 80 0e 01
| decrypted payload:  00 03 00 00  08 03 00 00  02 03 00 00  08 03 00 00
| decrypted payload:  05 03 00 00  08 03 00 00  01 00 00 00  08 05 00 00
| decrypted payload:  00 2d 00 00  18 01 00 00  00 07 00 00  10 00 00 ff
| decrypted payload:  ff 00 00 00  00 ff ff ff  ff 29 00 00  18 01 00 00
| decrypted payload:  00 07 00 00  10 00 00 ff  ff 00 00 00  00 ff ff ff
| decrypted payload:  ff 00 00 00  08 00 00 40  21 7e ca 57  f0 6a f1 06
| striping 7 bytes as pad
| Now let's proceed with payload (ISAKMP_NEXT_v2IDi)
| **parse IKEv2 Identification Payload:
|    next payload type: ISAKMP_NEXT_v2N
|    flags: none
|    length: 12
|    id_type: ID_FQDN
| processing payload: ISAKMP_NEXT_v2IDi (len=12)
| Now let's proceed with payload (ISAKMP_NEXT_v2N)
| **parse IKEv2 Notify Payload:
|    next payload type: ISAKMP_NEXT_v2CERTREQ
|    flags: none
|    length: 8
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_INITIAL_CONTACT
| processing payload: ISAKMP_NEXT_v2N (len=8)
| Now let's proceed with payload (ISAKMP_NEXT_v2CERTREQ)
| **parse IKEv2 Certificate Request Payload:
|    next payload type: ISAKMP_NEXT_v2IDr
|    flags: none
|    length: 25
|    ikev2 cert encoding: CERT_X509_SIGNATURE
| processing payload: ISAKMP_NEXT_v2CERTREQ (len=25)
| Now let's proceed with payload (ISAKMP_NEXT_v2IDr)
| **parse IKEv2 Identification Payload:
|    next payload type: ISAKMP_NEXT_v2AUTH
|    flags: none
|    length: 12
|    id_type: ID_FQDN
| processing payload: ISAKMP_NEXT_v2IDr (len=12)
| Now let's proceed with payload (ISAKMP_NEXT_v2AUTH)
| **parse IKEv2 Authentication Payload:
|    next payload type: ISAKMP_NEXT_v2CP
|    flags: none
|    length: 24
|    auth method: IKEv2_AUTH_SHARED
| processing payload: ISAKMP_NEXT_v2AUTH (len=24)
| Now let's proceed with payload (ISAKMP_NEXT_v2CP)
| **parse IKEv2 Generic Payload:
|    next payload type: ISAKMP_NEXT_v2SA
|    flags: none
|    length: 16
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #1: non-critical payload ignored because it contains an unknown or unexpected payload type (ISAKMP_NEXT_v2CP) at the outermost level
| Now let's proceed with payload (ISAKMP_NEXT_v2SA)
| **parse IKEv2 Security Association Payload:
|    next payload type: ISAKMP_NEXT_v2TSi
|    flags: none
|    length: 144
| processing payload: ISAKMP_NEXT_v2SA (len=144)
| Now let's proceed with payload (ISAKMP_NEXT_v2TSi)
| **parse IKEv2 Traffic Selector Payload:
|    next payload type: ISAKMP_NEXT_v2TSr
|    flags: none
|    length: 24
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSi (len=24)
| Now let's proceed with payload (ISAKMP_NEXT_v2TSr)
| **parse IKEv2 Traffic Selector Payload:
|    next payload type: ISAKMP_NEXT_v2N
|    flags: none
|    length: 24
|    number of TS: 1
| processing payload: ISAKMP_NEXT_v2TSr (len=24)
| Now let's proceed with payload (ISAKMP_NEXT_v2N)
| **parse IKEv2 Notify Payload:
|    next payload type: ISAKMP_NEXT_v2NONE
|    flags: none
|    length: 8
|    Protocol ID: PROTO_RESERVED
|    SPI size: 0
|    Notify Message Type: v2N_EAP_ONLY_AUTHENTICATION
| processing payload: ISAKMP_NEXT_v2N (len=8)
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #1: IKEv2 mode peer ID is ID_FQDN: '@road'
| idhash verify I2  02 00 00 00  72 6f 61 64
| hmac_update data value:
|   02 00 00 00  72 6f 61 64
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| has a v2CERTREQ payload; going to decode it
| CR  bd 90 4b 4c  80 4f 2c 08  fc 9b 03 a9  b8 7e 20 31
| CR  c4 e2 04 08
|   cert blob content is not binary ASN.1
| started looking for secret for @east->@road of kind PPK_PSK
| actually looking for secret for @east->@road of kind PPK_PSK
| line 1: key type PPK_PSK(@east) to type PPK_PSK
| 1: compared key @road to @east / @road -> 4
| 2: compared key @east to @east / @road -> 12
| line 1: match=12
| best_match 0>12 best=0x7fb50e11bef8 (line=1)
| concluding with best_match=12 best=0x7fb50e11bef8 (lineno=1)
| hmac_update data value:
|   4b 65 79 20  50 61 64 20  66 6f 72 20  49 4b 45 76
|   32
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| negotiated prf: oakley_md5 hash length: 16
| inner prf output  8d dd d6 a0  26 08 49 b6  f8 38 8e a7  b5 aa e3 d0
| hmac_update data value:
|   eb 68 75 06  3d f3 09 7e  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 98  22 00 01 18
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  00 00 00 ec  02 01 00 1b
|   03 00 00 0c  01 00 00 0c  80 0e 00 80  03 00 00 0c
|   01 00 00 0c  80 0e 00 c0  03 00 00 0c  01 00 00 0c
|   80 0e 01 00  03 00 00 08  01 00 00 03  03 00 00 08
|   03 00 00 05  03 00 00 08  03 00 00 08  03 00 00 08
|   03 00 00 02  03 00 00 08  03 00 00 01  03 00 00 08
|   03 00 00 0c  03 00 00 08  03 00 00 0d  03 00 00 08
|   03 00 00 0e  03 00 00 08  02 00 00 04  03 00 00 08
|   02 00 00 08  03 00 00 08  02 00 00 02  03 00 00 08
|   02 00 00 01  03 00 00 08  02 00 00 05  03 00 00 08
|   02 00 00 06  03 00 00 08  02 00 00 07  03 00 00 08
|   04 00 00 0e  03 00 00 08  04 00 00 17  03 00 00 08
|   04 00 00 18  03 00 00 08  04 00 00 05  03 00 00 08
|   04 00 00 0f  03 00 00 08  04 00 00 10  03 00 00 08
|   04 00 00 12  03 00 00 08  04 00 00 02  00 00 00 08
|   04 00 00 16  28 00 01 08  00 0e 00 00  89 08 2a 73
|   42 36 58 f3  e0 58 75 df  9b 3c 19 e8  2a 58 68 2b
|   5b c9 17 93  01 ad f5 b2  1c 4d 43 e0  c4 c1 d6 96
|   a7 6b 5b df  33 4e c4 ac  7b 40 f5 2e  07 35 62 44
|   da 72 7b 74  b9 83 8e 8c  e1 37 73 6d  0e 56 b8 c0
|   aa a0 d3 97  a6 a2 78 d0  ab 5b 45 c5  f0 82 90 a9
|   62 b7 01 ef  8b 50 09 41  d0 d2 ca e5  6e 08 31 c3
|   81 b1 1e d6  c7 58 19 51  0e 6d bd c1  9d 0c 97 9b
|   28 b0 7a e1  53 a4 25 e3  da 0f ec de  e8 8d dc 17
|   d0 cb 8b 43  82 02 32 ff  17 fb 54 a0  cf f0 67 d1
|   55 1b 9d 1e  24 75 a2 a7  46 a6 f5 7c  96 98 5d 7f
|   af 71 6e 05  07 7d 97 b6  68 e6 54 e2  c3 31 46 63
|   03 eb 33 bd  ff 97 cc d8  ac 97 25 e2  04 cd bb 4c
|   c4 03 0a 59  d9 15 2a cd  60 e7 80 9a  b0 92 69 62
|   96 cc 91 2e  d3 d6 12 b8  97 d0 4e 77  d4 f0 b9 ce
|   7e ae 73 57  26 42 c0 fc  61 2d d3 3e  6a 5a a0 52
|   f9 57 94 45  e3 0d 9b d6  b1 1c 11 29  29 00 00 24
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
|   29 00 00 1c  00 00 40 04  19 00 f3 40  78 53 f5 cb
|   45 c6 38 8a  98 14 24 95  ed fa 03 d2  00 00 00 1c
|   00 00 40 05  d9 02 2f 1d  a3 b4 39 d1  59 d0 93 1c
|   dc c8 98 c2  f8 19 29 5e
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   ba 00 ce 0c  6d f3 ae 12  da 0e d3 a8  8c cb ae 13
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| inputs to hash1 (first packet)
|   eb 68 75 06  3d f3 09 7e  00 00 00 00  00 00 00 00
|   21 20 22 08  00 00 00 00  00 00 02 98  22 00 01 18
|   02 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  00 00 00 ec  02 01 00 1b
|   03 00 00 0c  01 00 00 0c  80 0e 00 80  03 00 00 0c
|   01 00 00 0c  80 0e 00 c0  03 00 00 0c  01 00 00 0c
|   80 0e 01 00  03 00 00 08  01 00 00 03  03 00 00 08
|   03 00 00 05  03 00 00 08  03 00 00 08  03 00 00 08
|   03 00 00 02  03 00 00 08  03 00 00 01  03 00 00 08
|   03 00 00 0c  03 00 00 08  03 00 00 0d  03 00 00 08
|   03 00 00 0e  03 00 00 08  02 00 00 04  03 00 00 08
|   02 00 00 08  03 00 00 08  02 00 00 02  03 00 00 08
|   02 00 00 01  03 00 00 08  02 00 00 05  03 00 00 08
|   02 00 00 06  03 00 00 08  02 00 00 07  03 00 00 08
|   04 00 00 0e  03 00 00 08  04 00 00 17  03 00 00 08
|   04 00 00 18  03 00 00 08  04 00 00 05  03 00 00 08
|   04 00 00 0f  03 00 00 08  04 00 00 10  03 00 00 08
|   04 00 00 12  03 00 00 08  04 00 00 02  00 00 00 08
|   04 00 00 16  28 00 01 08  00 0e 00 00  89 08 2a 73
|   42 36 58 f3  e0 58 75 df  9b 3c 19 e8  2a 58 68 2b
|   5b c9 17 93  01 ad f5 b2  1c 4d 43 e0  c4 c1 d6 96
|   a7 6b 5b df  33 4e c4 ac  7b 40 f5 2e  07 35 62 44
|   da 72 7b 74  b9 83 8e 8c  e1 37 73 6d  0e 56 b8 c0
|   aa a0 d3 97  a6 a2 78 d0  ab 5b 45 c5  f0 82 90 a9
|   62 b7 01 ef  8b 50 09 41  d0 d2 ca e5  6e 08 31 c3
|   81 b1 1e d6  c7 58 19 51  0e 6d bd c1  9d 0c 97 9b
|   28 b0 7a e1  53 a4 25 e3  da 0f ec de  e8 8d dc 17
|   d0 cb 8b 43  82 02 32 ff  17 fb 54 a0  cf f0 67 d1
|   55 1b 9d 1e  24 75 a2 a7  46 a6 f5 7c  96 98 5d 7f
|   af 71 6e 05  07 7d 97 b6  68 e6 54 e2  c3 31 46 63
|   03 eb 33 bd  ff 97 cc d8  ac 97 25 e2  04 cd bb 4c
|   c4 03 0a 59  d9 15 2a cd  60 e7 80 9a  b0 92 69 62
|   96 cc 91 2e  d3 d6 12 b8  97 d0 4e 77  d4 f0 b9 ce
|   7e ae 73 57  26 42 c0 fc  61 2d d3 3e  6a 5a a0 52
|   f9 57 94 45  e3 0d 9b d6  b1 1c 11 29  29 00 00 24
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
|   29 00 00 1c  00 00 40 04  19 00 f3 40  78 53 f5 cb
|   45 c6 38 8a  98 14 24 95  ed fa 03 d2  00 00 00 1c
|   00 00 40 05  d9 02 2f 1d  a3 b4 39 d1  59 d0 93 1c
|   dc c8 98 c2  f8 19 29 5e
| inputs to hash2 (responder nonce)
|   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| idhash  ba 00 ce 0c  6d f3 ae 12  da 0e d3 a8  8c cb ae 13
| Received PSK auth octets
|   52 74 af bf  0c 7a f5 35  e8 f3 e2 2a  59 3f 11 47
| Calculated PSK auth octets
|   52 74 af bf  0c 7a f5 35  e8 f3 e2 2a  59 3f 11 47
|  notify payload detected, should be processed....
| deleting event for #1
| inserting event EVENT_SA_REPLACE, timeout in 3330 seconds for #1
| event added after event EVENT_PENDING_PHASE2
| **emit ISAKMP Message:
|    initiator cookie:
|   eb 68 75 06  3d f3 09 7e
|    responder cookie:
|   27 ea 14 3b  d1 bb 4f 51
|    next payload type: ISAKMP_NEXT_v2E
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_v2_MSG_RESPONSE
|    message ID:  00 00 00 01
| ***emit IKEv2 Encryption Payload:
|    next payload type: ISAKMP_NEXT_v2IDr
|    flags: none
| emitting 8 raw bytes of IV into IKEv2 Encryption Payload
| IV  78 50 e3 2e  1d 9d c0 2b
| IKEv2 thinking whether to send my certificate:
|  my policy has no RSASIG, the policy is : PSK+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW
|  sendcert: CERT_ALWAYSSEND and I did not get a certificate request
|  so do not send cert.
| I did not send a certificate because digital signatures are not being used. (PSK)
| *****emit IKEv2 Identification Payload:
|    next payload type: ISAKMP_NEXT_v2AUTH
|    flags: none
|    id_type: ID_FQDN
| emitting 4 raw bytes of my identity into IKEv2 Identification Payload
| my identity  65 61 73 74
| emitting length of IKEv2 Identification Payload: 12
| idhash calc R2  02 00 00 00  65 61 73 74
| hmac_update data value:
|   02 00 00 00  65 61 73 74
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| assembled IDr payload -- CERT next
| CHILD SA proposals received
| going to assemble AUTH payload
| *****emit IKEv2 Authentication Payload:
|    next payload type: ISAKMP_NEXT_v2SA
|    flags: none
|    auth method: IKEv2_AUTH_SHARED
| started looking for secret for @east->@road of kind PPK_PSK
| actually looking for secret for @east->@road of kind PPK_PSK
| line 1: key type PPK_PSK(@east) to type PPK_PSK
| 1: compared key @road to @east / @road -> 4
| 2: compared key @east to @east / @road -> 12
| line 1: match=12
| best_match 0>12 best=0x7fb50e11bef8 (line=1)
| concluding with best_match=12 best=0x7fb50e11bef8 (lineno=1)
| hmac_update data value:
|   4b 65 79 20  50 61 64 20  66 6f 72 20  49 4b 45 76
|   32
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| negotiated prf: oakley_md5 hash length: 16
| inner prf output  8d dd d6 a0  26 08 49 b6  f8 38 8e a7  b5 aa e3 d0
| hmac_update data value:
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   21 20 22 20  00 00 00 00  00 00 01 9c  22 00 00 2c
|   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  28 00 01 08  00 0e 00 00
|   89 fd fd a6  6b a5 8b 94  d3 c6 35 dc  b9 84 a0 54
|   7f 50 a1 e9  9f 9a 8c d7  0a 9d b6 bc  ae b3 b1 e7
|   f8 88 d2 e9  51 cf 53 6a  9a d3 87 07  11 d4 40 8a
|   ad 2f af f9  c9 a5 c7 f1  d8 d9 4c 87  3c 3c 0b c7
|   94 b4 84 11  b7 cd d4 b4  72 6d 21 ca  b7 91 3f f8
|   84 36 9b 33  83 9b 23 a1  c6 e7 a2 54  3c b3 8c be
|   4e 3b 23 c9  0c 19 b9 fc  17 25 e3 4a  66 7f 07 0d
|   96 79 03 06  26 c9 35 06  b1 27 38 1f  78 2a d5 a0
|   20 8f 0e 14  84 d8 f6 8d  c2 22 a5 0a  89 b9 4b 26
|   c2 c5 79 3e  4d 6c 27 8b  58 b5 47 05  57 43 68 29
|   85 95 c1 ae  ed 57 b2 9f  88 32 07 7a  f9 ee be 40
|   e6 44 a9 d2  2e 6f b0 74  28 89 ca c0  ce 15 25 15
|   f2 b3 b3 63  e5 60 78 9e  0e d5 01 7a  9e 47 5e 18
|   b3 85 e4 66  29 64 bf 8b  19 d4 ef a5  64 07 0d f0
|   17 87 8b 4f  a9 18 d8 31  e3 59 b4 9d  2e 4f 28 8c
|   48 6c 45 11  ff de eb eb  49 d4 c0 d6  62 b3 9b 4c
|   29 00 00 14  2c 12 25 90  56 49 63 75  90 2e 85 46
|   06 33 75 92  29 00 00 1c  00 00 40 04  35 9b 38 f8
|   9c 41 97 78  9a aa 5a 8a  83 91 34 64  f3 f4 46 f6
|   00 00 00 1c  00 00 40 05  0e 70 94 60  c2 02 98 d7
|   14 a7 3b 60  26 8a ba b2  53 e2 39 51
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   09 28 2a 30  5d aa 9f 44  c9 2f c6 60  d1 91 34 a2
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| inputs to hash1 (first packet)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   21 20 22 20  00 00 00 00  00 00 01 9c  22 00 00 2c
|   00 00 00 28  01 01 00 04  03 00 00 08  01 00 00 03
|   03 00 00 08  03 00 00 01  03 00 00 08  02 00 00 01
|   00 00 00 08  04 00 00 0e  28 00 01 08  00 0e 00 00
|   89 fd fd a6  6b a5 8b 94  d3 c6 35 dc  b9 84 a0 54
|   7f 50 a1 e9  9f 9a 8c d7  0a 9d b6 bc  ae b3 b1 e7
|   f8 88 d2 e9  51 cf 53 6a  9a d3 87 07  11 d4 40 8a
|   ad 2f af f9  c9 a5 c7 f1  d8 d9 4c 87  3c 3c 0b c7
|   94 b4 84 11  b7 cd d4 b4  72 6d 21 ca  b7 91 3f f8
|   84 36 9b 33  83 9b 23 a1  c6 e7 a2 54  3c b3 8c be
|   4e 3b 23 c9  0c 19 b9 fc  17 25 e3 4a  66 7f 07 0d
|   96 79 03 06  26 c9 35 06  b1 27 38 1f  78 2a d5 a0
|   20 8f 0e 14  84 d8 f6 8d  c2 22 a5 0a  89 b9 4b 26
|   c2 c5 79 3e  4d 6c 27 8b  58 b5 47 05  57 43 68 29
|   85 95 c1 ae  ed 57 b2 9f  88 32 07 7a  f9 ee be 40
|   e6 44 a9 d2  2e 6f b0 74  28 89 ca c0  ce 15 25 15
|   f2 b3 b3 63  e5 60 78 9e  0e d5 01 7a  9e 47 5e 18
|   b3 85 e4 66  29 64 bf 8b  19 d4 ef a5  64 07 0d f0
|   17 87 8b 4f  a9 18 d8 31  e3 59 b4 9d  2e 4f 28 8c
|   48 6c 45 11  ff de eb eb  49 d4 c0 d6  62 b3 9b 4c
|   29 00 00 14  2c 12 25 90  56 49 63 75  90 2e 85 46
|   06 33 75 92  29 00 00 1c  00 00 40 04  35 9b 38 f8
|   9c 41 97 78  9a aa 5a 8a  83 91 34 64  f3 f4 46 f6
|   00 00 00 1c  00 00 40 05  0e 70 94 60  c2 02 98 d7
|   14 a7 3b 60  26 8a ba b2  53 e2 39 51
| inputs to hash2 (initiator nonce)
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| idhash  09 28 2a 30  5d aa 9f 44  c9 2f c6 60  d1 91 34 a2
| PSK auth octets  ed 00 f8 f0  9b 1b 7a 25  86 62 34 26  3b 4d 47 09
| emitting 16 raw bytes of PSK auth into IKEv2 Authentication Payload
| PSK auth  ed 00 f8 f0  9b 1b 7a 25  86 62 34 26  3b 4d 47 09
| emitting length of IKEv2 Authentication Payload: 24
| request lease from addresspool 192.0.2.1-192.0.2.200 reference count 3 thatid '@road' that.client.addr 192.1.3.209
| in share_lease: no lingering addresspool lease for '@road'
| New lease from addresspool index 0
| new lease 192.0.2.1 from addresspool 192.0.2.1-192.0.2.200 to that.client.addr 192.1.3.209 thatid '@road'
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV4_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 16
|    start port: 0
|    end port: 65535
| parsing 4 raw bytes of IKEv2 Traffic Selector into ipv4 ts
| ipv4 ts  00 00 00 00
| parsing 4 raw bytes of IKEv2 Traffic Selector into ipv4 ts
| ipv4 ts  ff ff ff ff
| ***parse IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV4_ADDR_RANGE
|    IP Protocol ID: 0
|    length: 16
|    start port: 0
|    end port: 65535
| parsing 4 raw bytes of IKEv2 Traffic Selector into ipv4 ts
| ipv4 ts  00 00 00 00
| parsing 4 raw bytes of IKEv2 Traffic Selector into ipv4 ts
| ipv4 ts  ff ff ff ff
| duplicating state object #1
| creating state object #2 at 0x7fb50df1a8c8
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  27 ea 14 3b  d1 bb 4f 51
| state hash entry 7
| inserting state object #2
| inserting event EVENT_SO_DISCARD, timeout in 0 seconds for #2
| event added at head of queue
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV4_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: 0.0.0.0
|   ip high: 255.255.255.255
| printing contents struct traffic_selector
|   ts_type: IKEv2_TS_IPV4_ADDR_RANGE
|   ipprotoid: 0
|   startport: 0
|   endport: 65535
|   ip low: 192.0.2.1
|   ip high: 192.0.2.1
| *****emit IKEv2 Security Association Payload:
|    next payload type: ISAKMP_NEXT_v2CP
|    flags: none
| entered ikev2_parse_child_sa_body()
| empty esp_info, returning defaults
| ***parse IKEv2 Proposal Substructure Payload:
|    last proposal: v2_PROPOSAL_NON_LAST
|    length: 40
|    prop #: 1
|    proto ID: IKEv2_SEC_PROTO_ESP
|    spi size: 4
|    # transforms: 3
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  c8 bc 39 ed
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 128
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_SHA2_512_256
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_ESN
|    IKEv2 transform ID: ESN_DISABLED
| Starting at transform type TRANS_TYPE_ENCR
| failed proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_NONE(0) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_INTEG
| failed proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ESN
| failed proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| not matched proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ENCR
| failed proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_NONE(0) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_INTEG
| failed proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ESN
| failed proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| not matched proposal 1
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ENCR
| failed proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_NONE(0) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_INTEG
| failed proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ESN
| failed proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| not matched proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ENCR
| failed proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_NONE(0) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_INTEG
| failed proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ESN
| failed proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| not matched proposal 1
|             failed encr= (policy:3DES(-1) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_HMAC_MD5_96(-1) vs offered:AUTH_HMAC_SHA2_512_256(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| proposal 1 was not usable - but were we not our best?
| ***parse IKEv2 Proposal Substructure Payload:
|    last proposal: v2_PROPOSAL_LAST
|    length: 100
|    prop #: 2
|    proto ID: IKEv2_SEC_PROTO_ESP
|    spi size: 4
|    # transforms: 9
| parsing 4 raw bytes of IKEv2 Proposal Substructure Payload into CHILD SA SPI
| CHILD SA SPI  c8 bc 39 ed
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 128
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 192
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 256
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: 3DES
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 12
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: BLOWFISH(obsoleted)
| *****parse IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 256
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_SHA1_96
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_AES_XCBC_96
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_MD5_96
| ****parse IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_LAST
|    length: 8
|    IKEv2 transform type: TRANS_TYPE_ESN
|    IKEv2 transform ID: ESN_DISABLED
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #1: Hugh is surprised there is more than one encryption transform, namely '5'
| Starting at transform type TRANS_TYPE_ENCR
| failed proposal 2
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             failed integ=(policy:AUTH_NONE(0) vs offered:AUTH_HMAC_SHA1_96(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_INTEG
| failed proposal 2
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             succeeded integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA1_96(-1))
|             failed esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| Starting at transform type TRANS_TYPE_ESN
| matched proposal 2
|             succeeded encr= (policy:AES_CBC(128) vs offered:AES_CBC(128))
|             succeeded integ=(policy:AUTH_HMAC_SHA1_96(-1) vs offered:AUTH_HMAC_SHA1_96(-1))
|             succeeded esn=  (policy:ESN_DISABLED vs offered:ESN_DISABLED)
| check_kernel_encrypt_alg(12,128): OK
| netlink_get_spi: allocated 0xe48895a5 for esp.0@192.1.2.23
| ******emit IKEv2 Proposal Substructure Payload:
|    last proposal: v2_PROPOSAL_LAST
|    prop #: 2
|    proto ID: IKEv2_SEC_PROTO_ESP
|    spi size: 4
|    # transforms: 3
| emitting 4 raw bytes of our spi into IKEv2 Proposal Substructure Payload
| our spi  e4 88 95 a5
| *******emit IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    IKEv2 transform type: TRANS_TYPE_ENCR
|    IKEv2 transform ID: AES_CBC
| keysize is required - sending key length attribute
| ********emit IKEv2 Attribute Substructure Payload:
|    af+type: IKEv2_KEY_LENGTH
|    length/value: 128
|     [128 is 128??]
| emitting length of IKEv2 Transform Substructure Payload: 12
| *******emit IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_NON_LAST
|    IKEv2 transform type: TRANS_TYPE_INTEG
|    IKEv2 transform ID: AUTH_HMAC_SHA1_96
| emitting length of IKEv2 Transform Substructure Payload: 8
| *******emit IKEv2 Transform Substructure Payload:
|    last transform: v2_TRANSFORM_LAST
|    IKEv2 transform type: TRANS_TYPE_ESN
|    IKEv2 transform ID: ESN_DISABLED
| emitting length of IKEv2 Transform Substructure Payload: 8
| emitting length of IKEv2 Proposal Substructure Payload: 40
| emitting length of IKEv2 Security Association Payload: 44
| send Configuration Payload request
| *****emit IKEv2 Configuration Payload:
|    next payload type: ISAKMP_NEXT_v2SA
|    flags: none
|    ikev2_cfg_type: IKEv2_CP_CFG_REQUEST
| ******emit IKEv2 Configuration Payload Attribute:
|    Attribute Type: INTERNAL_IP4_ADDRESS
| emitting 4 raw bytes of IP4_addr into IKEv2 Configuration Payload Attribute
| IP4_addr  c0 00 02 01
| emitting length of IKEv2 Configuration Payload Attribute: 4
| emitting length of IKEv2 Configuration Payload: 16
| *****emit IKEv2 Traffic Selector Payload:
|    next payload type: ISAKMP_NEXT_v2TSr
|    flags: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV4_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 4 raw bytes of ipv4 low into IKEv2 Traffic Selector
| ipv4 low  c0 00 02 01
| emitting 4 raw bytes of ipv4 high into IKEv2 Traffic Selector
| ipv4 high  c0 00 02 01
| emitting length of IKEv2 Traffic Selector: 16
| emitting length of IKEv2 Traffic Selector Payload: 24
| *****emit IKEv2 Traffic Selector Payload:
|    next payload type: ISAKMP_NEXT_v2NONE
|    flags: none
|    number of TS: 1
| ******emit IKEv2 Traffic Selector:
|    TS type: IKEv2_TS_IPV4_ADDR_RANGE
|    IP Protocol ID: 0
|    start port: 0
|    end port: 65535
| emitting 4 raw bytes of ipv4 low into IKEv2 Traffic Selector
| ipv4 low  00 00 00 00
| emitting 4 raw bytes of ipv4 high into IKEv2 Traffic Selector
| ipv4 high  ff ff ff ff
| emitting length of IKEv2 Traffic Selector: 16
| emitting length of IKEv2 Traffic Selector Payload: 24
| kernel_alg_esp_info(): transid=12, auth=2, ei=0x7fb51606ccd0, enckeylen=16, authkeylen=20, encryptalg=12, authalg=3
| enckeylen=16, authkeylen=20, keymat_len=36
| hmac_update data value:
|
| hmac_update data value:
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|
| hmac_update data value:
|
| hmac_update data value:
|   01
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| prf+[1]:  64 b5 db 50  a3 d4 19 07  f9 15 05 65  0b 71 9a 31
| hmac_update data value:
|   64 b5 db 50  a3 d4 19 07  f9 15 05 65  0b 71 9a 31
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|
| hmac_update data value:
|
| hmac_update data value:
|   02
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| prf+[2]:  a2 56 61 68  41 9a eb 8a  7b 9b 38 d2  06 31 bf 41
| hmac_update data value:
|   a2 56 61 68  41 9a eb 8a  7b 9b 38 d2  06 31 bf 41
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|
| hmac_update data value:
|
| hmac_update data value:
|   03
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| prf+[3]:  67 c5 c8 55  ad 58 72 c3  3c da 39 22  aa c6 23 c8
| hmac_update data value:
|   67 c5 c8 55  ad 58 72 c3  3c da 39 22  aa c6 23 c8
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|
| hmac_update data value:
|
| hmac_update data value:
|   04
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| prf+[4]:  21 0b 3c f2  bf 73 97 8a  cf b5 9b 35  89 b4 ab 52
| hmac_update data value:
|   21 0b 3c f2  bf 73 97 8a  cf b5 9b 35  89 b4 ab 52
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   4f 67 51 bb  2a c8 fd 85  d1 8d 6d 34  7f a9 4b fb
|   80 ce 63 fc  eb 83 8d 59  c0 fb 51 dd  9a 39 b6 cf
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|   2c 12 25 90  56 49 63 75  90 2e 85 46  06 33 75 92
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| hmac_update data value:
|
| hmac_update data value:
|
| hmac_update data value:
|   05
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| prf+[5]:  9a 6d 98 d6  d5 d7 c9 3d  4f 55 74 9b  91 3b 47 40
| our  keymat  64 b5 db 50  a3 d4 19 07  f9 15 05 65  0b 71 9a 31
| our  keymat  a2 56 61 68  41 9a eb 8a  7b 9b 38 d2  06 31 bf 41
| our  keymat  67 c5 c8 55
| peer keymat  ad 58 72 c3  3c da 39 22  aa c6 23 c8  21 0b 3c f2
| peer keymat  bf 73 97 8a  cf b5 9b 35  89 b4 ab 52  9a 6d 98 d6
| peer keymat  d5 d7 c9 3d
| install_ipsec_sa() for #2: inbound and outbound
| route owner of "roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 unrouted: NULL; eroute owner: NULL
| could_route called for roadnet-eastnet-ipv4-psk-ikev2 (kind=CK_INSTANCE)
| looking for alg with transid: 12 keylen: 128 auth: 2
| checking transid: 11 keylen: 0 auth: 1
| checking transid: 11 keylen: 0 auth: 2
| checking transid: 3 keylen: 24 auth: 0
| checking transid: 3 keylen: 24 auth: 1
| checking transid: 3 keylen: 24 auth: 2
| checking transid: 12 keylen: 16 auth: 0
| checking transid: 12 keylen: 16 auth: 1
| checking transid: 12 keylen: 16 auth: 2
| st->st_esp.keymat_len=36 is key_len=16 + ei->authkeylen=20
| ESP enckey:  ad 58 72 c3  3c da 39 22  aa c6 23 c8  21 0b 3c f2
| ESP authkey:  bf 73 97 8a  cf b5 9b 35  89 b4 ab 52  9a 6d 98 d6
| ESP authkey:  d5 d7 c9 3d
| set up outgoing SA, ref=0/4294901761
| looking for alg with transid: 12 keylen: 128 auth: 2
| checking transid: 11 keylen: 0 auth: 1
| checking transid: 11 keylen: 0 auth: 2
| checking transid: 3 keylen: 24 auth: 0
| checking transid: 3 keylen: 24 auth: 1
| checking transid: 3 keylen: 24 auth: 2
| checking transid: 12 keylen: 16 auth: 0
| checking transid: 12 keylen: 16 auth: 1
| checking transid: 12 keylen: 16 auth: 2
| st->st_esp.keymat_len=36 is key_len=16 + ei->authkeylen=20
| ESP enckey:  64 b5 db 50  a3 d4 19 07  f9 15 05 65  0b 71 9a 31
| ESP authkey:  a2 56 61 68  41 9a eb 8a  7b 9b 38 d2  06 31 bf 41
| ESP authkey:  67 c5 c8 55
| add inbound eroute 192.0.2.1/32:0 --0-> 0.0.0.0/0:0 => tun.10000@192.1.2.23 (raw_eroute)
| satype(9) is not used in netlink_raw_eroute.
| raw_eroute result=1
| set up incoming SA, ref=0/4294901761
| sr for #2: unrouted
| route owner of "roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 unrouted: NULL; eroute owner: NULL
| route_and_eroute with c: roadnet-eastnet-ipv4-psk-ikev2 (next: none) ero:null esr:{(nil)} ro:null rosr:{(nil)} and state: 2
| eroute_connection add eroute 0.0.0.0/0:0 --0-> 192.0.2.1/32:0 => tun.0@192.1.3.209 (raw_eroute)
| satype(9) is not used in netlink_raw_eroute.
| raw_eroute result=1
| command executing up-client
| executing up-client: PLUTO_VERB='up-client' PLUTO_VERSION='2.0' PLUTO_CONNECTION='roadnet-eastnet-ipv4-psk-ikev2' PLUTO_INTERFACE='eth2' PLUTO_NEXT_HOP='192.1.3.209' PLUTO_ME='192.1.2.23' PLUTO_MY_ID='@east' PLUTO_MY_CLIENT='0.0.0.0/0' PLUTO_MY_CLIENT_NET='0.0.0.0' PLUTO_MY_CLIENT_MASK='0.0.0.0' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='16388' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.1.3.209' PLUTO_PEER_ID='@road' PLUTO_PEER_CLIENT='192.0.2.1/32' PLUTO_PEER_CLIENT_NET='192.0.2.1' PLUTO_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='PSK+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BANNER='' PLUTO_NM_CONFIGURED='0' ipsec _updown 2>&1
| popen cmd is 926 chars long
| cmd(   0):PLUTO_VERB='up-client' PLUTO_VERSION='2.0' PLUTO_CONNECTION='roadnet-eastnet-ipv:
| cmd(  80):4-psk-ikev2' PLUTO_INTERFACE='eth2' PLUTO_NEXT_HOP='192.1.3.209' PLUTO_ME='192.1:
| cmd( 160):.2.23' PLUTO_MY_ID='@east' PLUTO_MY_CLIENT='0.0.0.0/0' PLUTO_MY_CLIENT_NET='0.0.:
| cmd( 240):0.0' PLUTO_MY_CLIENT_MASK='0.0.0.0' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUT:
| cmd( 320):O_SA_REQID='16388' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.1.3.209' PLUTO_PEER_ID='@:
| cmd( 400):road' PLUTO_PEER_CLIENT='192.0.2.1/32' PLUTO_PEER_CLIENT_NET='192.0.2.1' PLUTO_P:
| cmd( 480):EER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PL:
| cmd( 560):UTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='PSK+ENC:
| cmd( 640):RYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SA:
| cmd( 720):REF_TRACK+IKE_FRAG_ALLOW' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_IS_P:
| cmd( 800):EER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BANNER:
| cmd( 880):='' PLUTO_NM_CONFIGURED='0' ipsec _updown 2>&1:
| route_and_eroute: firewall_notified: true
| command executing prepare-client
| executing prepare-client: PLUTO_VERB='prepare-client' PLUTO_VERSION='2.0' PLUTO_CONNECTION='roadnet-eastnet-ipv4-psk-ikev2' PLUTO_INTERFACE='eth2' PLUTO_NEXT_HOP='192.1.3.209' PLUTO_ME='192.1.2.23' PLUTO_MY_ID='@east' PLUTO_MY_CLIENT='0.0.0.0/0' PLUTO_MY_CLIENT_NET='0.0.0.0' PLUTO_MY_CLIENT_MASK='0.0.0.0' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='16388' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.1.3.209' PLUTO_PEER_ID='@road' PLUTO_PEER_CLIENT='192.0.2.1/32' PLUTO_PEER_CLIENT_NET='192.0.2.1' PLUTO_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='PSK+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BANNER='' PLUTO_NM_CONFIGURED='0' ipsec _updown 2>&1
| popen cmd is 931 chars long
| cmd(   0):PLUTO_VERB='prepare-client' PLUTO_VERSION='2.0' PLUTO_CONNECTION='roadnet-eastne:
| cmd(  80):t-ipv4-psk-ikev2' PLUTO_INTERFACE='eth2' PLUTO_NEXT_HOP='192.1.3.209' PLUTO_ME=':
| cmd( 160):192.1.2.23' PLUTO_MY_ID='@east' PLUTO_MY_CLIENT='0.0.0.0/0' PLUTO_MY_CLIENT_NET=:
| cmd( 240):'0.0.0.0' PLUTO_MY_CLIENT_MASK='0.0.0.0' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0':
| cmd( 320): PLUTO_SA_REQID='16388' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.1.3.209' PLUTO_PEER_:
| cmd( 400):ID='@road' PLUTO_PEER_CLIENT='192.0.2.1/32' PLUTO_PEER_CLIENT_NET='192.0.2.1' PL:
| cmd( 480):UTO_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL=':
| cmd( 560):0' PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='PS:
| cmd( 640):K+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWI:
| cmd( 720):NG+SAREF_TRACK+IKE_FRAG_ALLOW' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO:
| cmd( 800):_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_B:
| cmd( 880):ANNER='' PLUTO_NM_CONFIGURED='0' ipsec _updown 2>&1:
| command executing route-client
| executing route-client: PLUTO_VERB='route-client' PLUTO_VERSION='2.0' PLUTO_CONNECTION='roadnet-eastnet-ipv4-psk-ikev2' PLUTO_INTERFACE='eth2' PLUTO_NEXT_HOP='192.1.3.209' PLUTO_ME='192.1.2.23' PLUTO_MY_ID='@east' PLUTO_MY_CLIENT='0.0.0.0/0' PLUTO_MY_CLIENT_NET='0.0.0.0' PLUTO_MY_CLIENT_MASK='0.0.0.0' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' PLUTO_SA_REQID='16388' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.1.3.209' PLUTO_PEER_ID='@road' PLUTO_PEER_CLIENT='192.0.2.1/32' PLUTO_PEER_CLIENT_NET='192.0.2.1' PLUTO_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0' PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='PSK+ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING+SAREF_TRACK+IKE_FRAG_ALLOW' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_IS_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BANNER='' PLUTO_NM_CONFIGURED='0' ipsec _updown 2>&1
| popen cmd is 929 chars long
| cmd(   0):PLUTO_VERB='route-client' PLUTO_VERSION='2.0' PLUTO_CONNECTION='roadnet-eastnet-:
| cmd(  80):ipv4-psk-ikev2' PLUTO_INTERFACE='eth2' PLUTO_NEXT_HOP='192.1.3.209' PLUTO_ME='19:
| cmd( 160):2.1.2.23' PLUTO_MY_ID='@east' PLUTO_MY_CLIENT='0.0.0.0/0' PLUTO_MY_CLIENT_NET='0:
| cmd( 240):.0.0.0' PLUTO_MY_CLIENT_MASK='0.0.0.0' PLUTO_MY_PORT='0' PLUTO_MY_PROTOCOL='0' P:
| cmd( 320):LUTO_SA_REQID='16388' PLUTO_SA_TYPE='ESP' PLUTO_PEER='192.1.3.209' PLUTO_PEER_ID:
| cmd( 400):='@road' PLUTO_PEER_CLIENT='192.0.2.1/32' PLUTO_PEER_CLIENT_NET='192.0.2.1' PLUT:
| cmd( 480):O_PEER_CLIENT_MASK='255.255.255.255' PLUTO_PEER_PORT='0' PLUTO_PEER_PROTOCOL='0':
| cmd( 560): PLUTO_PEER_CA='' PLUTO_STACK='netkey' PLUTO_ADDTIME='0' PLUTO_CONN_POLICY='PSK+:
| cmd( 640):ENCRYPT+TUNNEL+PFS+IKEV1_DISABLE+IKEV2_ALLOW+IKEV2_PROPOSE+IKEV2_ALLOW_NARROWING:
| cmd( 720):+SAREF_TRACK+IKE_FRAG_ALLOW' PLUTO_CONN_ADDRFAMILY='ipv4' XAUTH_FAILED=0 PLUTO_I:
| cmd( 800):S_PEER_CISCO='0' PLUTO_PEER_DNS_INFO='' PLUTO_PEER_DOMAIN_INFO='' PLUTO_PEER_BAN:
| cmd( 880):NER='' PLUTO_NM_CONFIGURED='0' ipsec _updown 2>&1:
| route_and_eroute: instance "roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209, setting eroute_owner {spd=0x7fb50e172be0,sr=0x7fb50e172be0} to #2 (was #0) (newest_ipsec_sa=#0)
| emitting 8 raw bytes of padding and length into cleartext
| padding and length  00 01 02 03  04 05 06 07
| emitting 12 zero bytes of length of truncated HMAC into IKEv2 Encryption Payload
| emitting length of IKEv2 Encryption Payload: 176
| emitting length of ISAKMP Message: 204
| data before encryption:
|   27 00 00 0c  02 00 00 00  65 61 73 74  21 00 00 18
|   02 00 00 00  ed 00 f8 f0  9b 1b 7a 25  86 62 34 26
|   3b 4d 47 09  2f 00 00 2c  00 00 00 28  02 03 04 03
|   e4 88 95 a5  03 00 00 0c  01 00 00 0c  80 0e 00 80
|   03 00 00 08  03 00 00 02  00 00 00 08  05 00 00 00
|   21 00 00 10  01 00 00 00  00 01 00 04  c0 00 02 01
|   2d 00 00 18  01 00 00 00  07 00 00 10  00 00 ff ff
|   c0 00 02 01  c0 00 02 01  00 00 00 18  01 00 00 00
|   07 00 00 10  00 00 ff ff  00 00 00 00  ff ff ff ff
|   00 01 02 03  04 05 06 07
| NSS: do_3des init start
| NSS: do_3des init end
| data after encryption:
|   d8 58 38 24  fa 60 d8 5e  15 36 da 19  e5 c0 c0 99
|   ce 3d 2d 5d  72 e8 2b eb  c4 c0 f6 4f  c7 f8 d6 58
|   c3 86 38 ec  9f f5 3f cb  7a 0d f6 d4  a2 d6 45 4e
|   13 82 a5 ca  d4 90 0c db  1f 94 94 0f  c4 65 e9 14
|   c1 7c 20 2c  29 39 4f e1  a5 96 ff 97  b4 73 56 60
|   10 01 23 e0  5b e9 38 5b  ef 43 30 96  b4 19 23 99
|   3a 61 a1 f0  63 c0 24 66  bc e4 c8 75  3a 51 99 47
|   ed 5c 71 6c  69 53 8b 28  42 6a 72 19  9f 92 3e f4
|   09 9e de 7c  6c 90 ed 23  fd b9 27 9f  9a 96 33 2a
|   a5 54 6a 79  96 c1 36 60
| Inside authloc
| authkey pointer: 0x7fb50e0b2f80
| Inside authloc after init
| hmac_update data value:
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 20  00 00 00 01  00 00 00 cc  24 00 00 b0
|   78 50 e3 2e  1d 9d c0 2b  d8 58 38 24  fa 60 d8 5e
|   15 36 da 19  e5 c0 c0 99  ce 3d 2d 5d  72 e8 2b eb
|   c4 c0 f6 4f  c7 f8 d6 58  c3 86 38 ec  9f f5 3f cb
|   7a 0d f6 d4  a2 d6 45 4e  13 82 a5 ca  d4 90 0c db
|   1f 94 94 0f  c4 65 e9 14  c1 7c 20 2c  29 39 4f e1
|   a5 96 ff 97  b4 73 56 60  10 01 23 e0  5b e9 38 5b
|   ef 43 30 96  b4 19 23 99  3a 61 a1 f0  63 c0 24 66
|   bc e4 c8 75  3a 51 99 47  ed 5c 71 6c  69 53 8b 28
|   42 6a 72 19  9f 92 3e f4  09 9e de 7c  6c 90 ed 23
|   fd b9 27 9f  9a 96 33 2a  a5 54 6a 79  96 c1 36 60
| hmac_update: inside if
| hmac_update: after digest
| hmac_update: after assert
| Inside authloc after update
| Inside authloc after final
| data being hmac:  eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
| data being hmac:  2e 20 23 20  00 00 00 01  00 00 00 cc  24 00 00 b0
| data being hmac:  78 50 e3 2e  1d 9d c0 2b  d8 58 38 24  fa 60 d8 5e
| data being hmac:  15 36 da 19  e5 c0 c0 99  ce 3d 2d 5d  72 e8 2b eb
| data being hmac:  c4 c0 f6 4f  c7 f8 d6 58  c3 86 38 ec  9f f5 3f cb
| data being hmac:  7a 0d f6 d4  a2 d6 45 4e  13 82 a5 ca  d4 90 0c db
| data being hmac:  1f 94 94 0f  c4 65 e9 14  c1 7c 20 2c  29 39 4f e1
| data being hmac:  a5 96 ff 97  b4 73 56 60  10 01 23 e0  5b e9 38 5b
| data being hmac:  ef 43 30 96  b4 19 23 99  3a 61 a1 f0  63 c0 24 66
| data being hmac:  bc e4 c8 75  3a 51 99 47  ed 5c 71 6c  69 53 8b 28
| data being hmac:  42 6a 72 19  9f 92 3e f4  09 9e de 7c  6c 90 ed 23
| data being hmac:  fd b9 27 9f  9a 96 33 2a  a5 54 6a 79  96 c1 36 60
| out calculated auth:
|   ee 87 4e e5  6d 24 8a a8  25 7f 5f 41
| complete v2 state transition from STATE_UNDEFINED with STF_OK
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #2: transition from state STATE_PARENT_R1 to state STATE_PARENT_R2
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #2: negotiated tunnel [0.0.0.0,255.255.255.255:0-65535 0] -> [192.0.2.1,192.0.2.1:0-65535 0]
"roadnet-eastnet-ipv4-psk-ikev2"[1] 192.1.3.209 #2: STATE_PARENT_R2: received v2I2, PARENT SA established tunnel mode {ESP=>0xc8bc39ed <0xe48895a5 xfrm=AES_128-HMAC_SHA1 NATOA=none NATD=none DPD=passive}
| sending reply packet to 192.1.3.209:500 (from port 500)
| sending 204 bytes for STATE_PARENT_R1 through eth2:500 to 192.1.3.209:500 (using #2)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 20  00 00 00 01  00 00 00 cc  24 00 00 b0
|   78 50 e3 2e  1d 9d c0 2b  d8 58 38 24  fa 60 d8 5e
|   15 36 da 19  e5 c0 c0 99  ce 3d 2d 5d  72 e8 2b eb
|   c4 c0 f6 4f  c7 f8 d6 58  c3 86 38 ec  9f f5 3f cb
|   7a 0d f6 d4  a2 d6 45 4e  13 82 a5 ca  d4 90 0c db
|   1f 94 94 0f  c4 65 e9 14  c1 7c 20 2c  29 39 4f e1
|   a5 96 ff 97  b4 73 56 60  10 01 23 e0  5b e9 38 5b
|   ef 43 30 96  b4 19 23 99  3a 61 a1 f0  63 c0 24 66
|   bc e4 c8 75  3a 51 99 47  ed 5c 71 6c  69 53 8b 28
|   42 6a 72 19  9f 92 3e f4  09 9e de 7c  6c 90 ed 23
|   fd b9 27 9f  9a 96 33 2a  a5 54 6a 79  96 c1 36 60
|   ee 87 4e e5  6d 24 8a a8  25 7f 5f 41
| releasing whack for #2 (sock=-1)
| releasing whack and unpending for parent #1
| unpending state #1
| deleting event for #2
| inserting event EVENT_SA_REPLACE, timeout in 28530 seconds for #2
| event added after event EVENT_LOG_DAILY
| * processed 1 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 51 seconds
| next event EVENT_PENDING_DDNS in 51 seconds
|
| *received 356 bytes from 192.1.3.209:500 on eth2 (port=500)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 08  00 00 00 01  00 00 01 64  23 00 01 48
|   a3 a1 21 54  98 f0 65 6e  2e 8a 43 04  d7 73 d0 b2
|   70 ed d5 50  ba 8e d2 cf  19 d0 6a 2f  14 c1 43 cd
|   b8 9c c2 b8  96 9f e3 bd  d9 21 98 a0  14 1d 46 19
|   07 d3 9d b3  34 fa 5a a5  9d 2d b4 3a  1a 38 d6 00
|   74 3b 80 96  42 01 b8 1f  94 11 f7 ea  95 f5 45 a1
|   6a 72 71 ae  e9 4a 23 f0  b1 4c dd f8  2c 95 f1 2a
|   9e 47 02 94  ec 4b d0 ae  81 74 da 9e  63 ef 01 db
|   6e a5 04 d1  bc e6 32 f5  d2 58 1e d9  2a d5 11 51
|   0f 69 f8 f9  14 39 06 95  4a 36 ea 90  cc 4a a2 4d
|   1a 05 7a 6b  75 34 53 56  bc b8 e7 f1  cb ff 9d 3d
|   fd d6 a6 3b  87 c8 0d 7d  49 16 de c7  56 a2 d9 bd
|   75 7e a4 66  ef d3 df 2f  5d 4b 9a da  bc a0 52 b1
|   9a b8 19 42  ec 08 04 88  e0 53 aa 26  5f db 80 ed
|   e8 2a fa 39  a3 05 7f 37  04 27 84 f8  2f ce 84 14
|   89 02 02 12  50 57 51 eb  6d 70 c1 7e  75 a8 12 ca
|   e1 63 0a b8  45 8b 86 d2  a2 44 16 fd  0f b7 3d e7
|   34 dd 39 7d  e3 7a ac 6a  7e 09 23 b0  ed d1 37 6f
|   d7 38 be 4e  35 3d 6d 70  32 d5 19 b2  07 81 0f e9
|   e8 59 83 d5  40 e3 1a b6  f6 9c 1b 8e  bb fc 1e b2
|   8b 5a 2a fd  b3 88 e4 5e  40 b8 ea c3  a2 bc 52 5b
|   a6 f3 f0 4c
| **parse ISAKMP Message:
|    initiator cookie:
|   eb 68 75 06  3d f3 09 7e
|    responder cookie:
|   27 ea 14 3b  d1 bb 4f 51
|    next payload type: ISAKMP_NEXT_v2E
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_v2_IKE_INIT
|    message ID:  00 00 00 01
|    length: 356
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35)
| I am receiving an IKE Request
| I am the IKE SA Original Responder
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  27 ea 14 3b  d1 bb 4f 51
| state hash entry 7
| parent v2 peer and cookies match on #1
| v2 state object #1 found, in STATE_PARENT_R2
| sending 204 bytes for ikev2-responder-retransmit through eth2:500 to 192.1.3.209:500 (using #1)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 20  00 00 00 01  00 00 00 cc  24 00 00 b0
|   78 50 e3 2e  1d 9d c0 2b  d8 58 38 24  fa 60 d8 5e
|   15 36 da 19  e5 c0 c0 99  ce 3d 2d 5d  72 e8 2b eb
|   c4 c0 f6 4f  c7 f8 d6 58  c3 86 38 ec  9f f5 3f cb
|   7a 0d f6 d4  a2 d6 45 4e  13 82 a5 ca  d4 90 0c db
|   1f 94 94 0f  c4 65 e9 14  c1 7c 20 2c  29 39 4f e1
|   a5 96 ff 97  b4 73 56 60  10 01 23 e0  5b e9 38 5b
|   ef 43 30 96  b4 19 23 99  3a 61 a1 f0  63 c0 24 66
|   bc e4 c8 75  3a 51 99 47  ed 5c 71 6c  69 53 8b 28
|   42 6a 72 19  9f 92 3e f4  09 9e de 7c  6c 90 ed 23
|   fd b9 27 9f  9a 96 33 2a  a5 54 6a 79  96 c1 36 60
|   ee 87 4e e5  6d 24 8a a8  25 7f 5f 41
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 48 seconds
| next event EVENT_PENDING_DDNS in 48 seconds
|
| *received 356 bytes from 192.1.3.209:500 on eth2 (port=500)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 08  00 00 00 01  00 00 01 64  23 00 01 48
|   a3 a1 21 54  98 f0 65 6e  2e 8a 43 04  d7 73 d0 b2
|   70 ed d5 50  ba 8e d2 cf  19 d0 6a 2f  14 c1 43 cd
|   b8 9c c2 b8  96 9f e3 bd  d9 21 98 a0  14 1d 46 19
|   07 d3 9d b3  34 fa 5a a5  9d 2d b4 3a  1a 38 d6 00
|   74 3b 80 96  42 01 b8 1f  94 11 f7 ea  95 f5 45 a1
|   6a 72 71 ae  e9 4a 23 f0  b1 4c dd f8  2c 95 f1 2a
|   9e 47 02 94  ec 4b d0 ae  81 74 da 9e  63 ef 01 db
|   6e a5 04 d1  bc e6 32 f5  d2 58 1e d9  2a d5 11 51
|   0f 69 f8 f9  14 39 06 95  4a 36 ea 90  cc 4a a2 4d
|   1a 05 7a 6b  75 34 53 56  bc b8 e7 f1  cb ff 9d 3d
|   fd d6 a6 3b  87 c8 0d 7d  49 16 de c7  56 a2 d9 bd
|   75 7e a4 66  ef d3 df 2f  5d 4b 9a da  bc a0 52 b1
|   9a b8 19 42  ec 08 04 88  e0 53 aa 26  5f db 80 ed
|   e8 2a fa 39  a3 05 7f 37  04 27 84 f8  2f ce 84 14
|   89 02 02 12  50 57 51 eb  6d 70 c1 7e  75 a8 12 ca
|   e1 63 0a b8  45 8b 86 d2  a2 44 16 fd  0f b7 3d e7
|   34 dd 39 7d  e3 7a ac 6a  7e 09 23 b0  ed d1 37 6f
|   d7 38 be 4e  35 3d 6d 70  32 d5 19 b2  07 81 0f e9
|   e8 59 83 d5  40 e3 1a b6  f6 9c 1b 8e  bb fc 1e b2
|   8b 5a 2a fd  b3 88 e4 5e  40 b8 ea c3  a2 bc 52 5b
|   a6 f3 f0 4c
| **parse ISAKMP Message:
|    initiator cookie:
|   eb 68 75 06  3d f3 09 7e
|    responder cookie:
|   27 ea 14 3b  d1 bb 4f 51
|    next payload type: ISAKMP_NEXT_v2E
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_v2_IKE_INIT
|    message ID:  00 00 00 01
|    length: 356
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35)
| I am receiving an IKE Request
| I am the IKE SA Original Responder
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  27 ea 14 3b  d1 bb 4f 51
| state hash entry 7
| parent v2 peer and cookies match on #1
| v2 state object #1 found, in STATE_PARENT_R2
| sending 204 bytes for ikev2-responder-retransmit through eth2:500 to 192.1.3.209:500 (using #1)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 20  00 00 00 01  00 00 00 cc  24 00 00 b0
|   78 50 e3 2e  1d 9d c0 2b  d8 58 38 24  fa 60 d8 5e
|   15 36 da 19  e5 c0 c0 99  ce 3d 2d 5d  72 e8 2b eb
|   c4 c0 f6 4f  c7 f8 d6 58  c3 86 38 ec  9f f5 3f cb
|   7a 0d f6 d4  a2 d6 45 4e  13 82 a5 ca  d4 90 0c db
|   1f 94 94 0f  c4 65 e9 14  c1 7c 20 2c  29 39 4f e1
|   a5 96 ff 97  b4 73 56 60  10 01 23 e0  5b e9 38 5b
|   ef 43 30 96  b4 19 23 99  3a 61 a1 f0  63 c0 24 66
|   bc e4 c8 75  3a 51 99 47  ed 5c 71 6c  69 53 8b 28
|   42 6a 72 19  9f 92 3e f4  09 9e de 7c  6c 90 ed 23
|   fd b9 27 9f  9a 96 33 2a  a5 54 6a 79  96 c1 36 60
|   ee 87 4e e5  6d 24 8a a8  25 7f 5f 41
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 41 seconds
| next event EVENT_PENDING_DDNS in 41 seconds
|
| *received 356 bytes from 192.1.3.209:500 on eth2 (port=500)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 08  00 00 00 01  00 00 01 64  23 00 01 48
|   a3 a1 21 54  98 f0 65 6e  2e 8a 43 04  d7 73 d0 b2
|   70 ed d5 50  ba 8e d2 cf  19 d0 6a 2f  14 c1 43 cd
|   b8 9c c2 b8  96 9f e3 bd  d9 21 98 a0  14 1d 46 19
|   07 d3 9d b3  34 fa 5a a5  9d 2d b4 3a  1a 38 d6 00
|   74 3b 80 96  42 01 b8 1f  94 11 f7 ea  95 f5 45 a1
|   6a 72 71 ae  e9 4a 23 f0  b1 4c dd f8  2c 95 f1 2a
|   9e 47 02 94  ec 4b d0 ae  81 74 da 9e  63 ef 01 db
|   6e a5 04 d1  bc e6 32 f5  d2 58 1e d9  2a d5 11 51
|   0f 69 f8 f9  14 39 06 95  4a 36 ea 90  cc 4a a2 4d
|   1a 05 7a 6b  75 34 53 56  bc b8 e7 f1  cb ff 9d 3d
|   fd d6 a6 3b  87 c8 0d 7d  49 16 de c7  56 a2 d9 bd
|   75 7e a4 66  ef d3 df 2f  5d 4b 9a da  bc a0 52 b1
|   9a b8 19 42  ec 08 04 88  e0 53 aa 26  5f db 80 ed
|   e8 2a fa 39  a3 05 7f 37  04 27 84 f8  2f ce 84 14
|   89 02 02 12  50 57 51 eb  6d 70 c1 7e  75 a8 12 ca
|   e1 63 0a b8  45 8b 86 d2  a2 44 16 fd  0f b7 3d e7
|   34 dd 39 7d  e3 7a ac 6a  7e 09 23 b0  ed d1 37 6f
|   d7 38 be 4e  35 3d 6d 70  32 d5 19 b2  07 81 0f e9
|   e8 59 83 d5  40 e3 1a b6  f6 9c 1b 8e  bb fc 1e b2
|   8b 5a 2a fd  b3 88 e4 5e  40 b8 ea c3  a2 bc 52 5b
|   a6 f3 f0 4c
| **parse ISAKMP Message:
|    initiator cookie:
|   eb 68 75 06  3d f3 09 7e
|    responder cookie:
|   27 ea 14 3b  d1 bb 4f 51
|    next payload type: ISAKMP_NEXT_v2E
|    ISAKMP version: IKEv2 version 2.0 (rfc4306/rfc5996)
|    exchange type: ISAKMP_v2_AUTH
|    flags: ISAKMP_FLAG_v2_IKE_INIT
|    message ID:  00 00 00 01
|    length: 356
|  processing version=2.0 packet with exchange type=ISAKMP_v2_AUTH (35)
| I am receiving an IKE Request
| I am the IKE SA Original Responder
| ICOOKIE:  eb 68 75 06  3d f3 09 7e
| RCOOKIE:  27 ea 14 3b  d1 bb 4f 51
| state hash entry 7
| parent v2 peer and cookies match on #1
| v2 state object #1 found, in STATE_PARENT_R2
| sending 204 bytes for ikev2-responder-retransmit through eth2:500 to 192.1.3.209:500 (using #1)
|   eb 68 75 06  3d f3 09 7e  27 ea 14 3b  d1 bb 4f 51
|   2e 20 23 20  00 00 00 01  00 00 00 cc  24 00 00 b0
|   78 50 e3 2e  1d 9d c0 2b  d8 58 38 24  fa 60 d8 5e
|   15 36 da 19  e5 c0 c0 99  ce 3d 2d 5d  72 e8 2b eb
|   c4 c0 f6 4f  c7 f8 d6 58  c3 86 38 ec  9f f5 3f cb
|   7a 0d f6 d4  a2 d6 45 4e  13 82 a5 ca  d4 90 0c db
|   1f 94 94 0f  c4 65 e9 14  c1 7c 20 2c  29 39 4f e1
|   a5 96 ff 97  b4 73 56 60  10 01 23 e0  5b e9 38 5b
|   ef 43 30 96  b4 19 23 99  3a 61 a1 f0  63 c0 24 66
|   bc e4 c8 75  3a 51 99 47  ed 5c 71 6c  69 53 8b 28
|   42 6a 72 19  9f 92 3e f4  09 9e de 7c  6c 90 ed 23
|   fd b9 27 9f  9a 96 33 2a  a5 54 6a 79  96 c1 36 60
|   ee 87 4e e5  6d 24 8a a8  25 7f 5f 41
| * processed 0 messages from cryptographic helpers
| next event EVENT_PENDING_DDNS in 28 seconds
| next event EVENT_PENDING_DDNS in 28 seconds
