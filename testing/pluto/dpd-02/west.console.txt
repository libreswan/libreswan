/testing/guestbin/swan-prep
west #
 ipsec setup start
[ 00.00] registered KLIPS /proc/sys/net
[ 00.00] ipsec_3des_init(alg_type=15 alg_id=3 name=3des): ret=0
[ 00.00] KLIPS cryptoapi interface: alg_type=15 alg_id=12 name=cbc(aes) keyminbits=128 keymaxbits=256, found(0)
[ 00.00] KLIPS cryptoapi interface: alg_type=15 alg_id=253 name=cbc(twofish) keyminbits=128 keymaxbits=256, found(0)
[ 00.00] KLIPS cryptoapi interface: alg_type=15 alg_id=252 name=cbc(serpent) keyminbits=128 keymaxbits=256, found(0)
[ 00.00] KLIPS cryptoapi interface: alg_type=15 alg_id=6 name=cbc(cast5) keyminbits=128 keymaxbits=128, found(0)
[ 00.00] KLIPS cryptoapi interface: alg_type=15 alg_id=3 name=cbc(des3_ede) keyminbits=192 keymaxbits=192, found(0)
[ 00.00] KLIPS: lookup for ciphername=cipher_null: not found 
[ 00.00] 
Redirecting to: systemctl start ipsec.service
[ 00.00] 
west #
 /testing/pluto/bin/wait-until-pluto-started
west #
 ipsec auto --add west-east
002 added connection description "west-east"
west #
 echo "initdone"
initdone
west #
 #!/bin/sh
west #
 # we can transmit in the clear
west #
 ping -q -c 8 -n 192.1.2.23
PING 192.1.2.23 (192.1.2.23) 56(84) bytes of data.
--- 192.1.2.23 ping statistics ---
8 packets transmitted, 8 received, 0% packet loss, time XXXX
rtt min/avg/max/mdev = 0.XXX/0.XXX/0.XXX/0.XXX ms
west #
 # bring up the tunnel
west #
 ipsec auto --up west-east
002 "west-east" #1: initiating Main Mode
104 "west-east" #1: STATE_MAIN_I1: initiate
003 "west-east" #1: received Vendor ID payload [Dead Peer Detection]
003 "west-east" #1: received Vendor ID payload [FRAGMENTATION]
003 "west-east" #1: received Vendor ID payload [RFC 3947]
002 "west-east" #1: enabling possible NAT-traversal with method RFC 3947 (NAT-Traversal)
106 "west-east" #1: STATE_MAIN_I2: sent MI2, expecting MR2
003 "west-east" #1: NAT-Traversal: Result using RFC 3947 (NAT-Traversal) sender port 500: no NAT detected
108 "west-east" #1: STATE_MAIN_I3: sent MI3, expecting MR3
003 "west-east" #1: received Vendor ID payload [CAN-IKEv2]
002 "west-east" #1: Main mode peer ID is ID_FQDN: '@east'
004 "west-east" #1: STATE_MAIN_I4: ISAKMP SA established {auth=RSA_SIG cipher=aes_256 integ=sha group=MODP2048}
002 "west-east" #2: initiating Quick Mode RSASIG+ENCRYPT+TUNNEL+PFS+UP+IKEV2_ALLOW+SAREF_TRACK+IKE_FRAG_ALLOW
117 "west-east" #2: STATE_QUICK_I1: initiate
004 "west-east" #2: STATE_QUICK_I2: sent QI2, IPsec SA established tunnel mode {ESP=>0xESPESP <0xESPESP xfrm=AES_128-HMAC_SHA1 NATOA=none NATD=none DPD=passive}
west #
 # use the tunnel
west #
 ping -q -c 8 -n 192.1.2.23
PING 192.1.2.23 (192.1.2.23) 56(84) bytes of data.
--- 192.1.2.23 ping statistics ---
8 packets transmitted, 8 received, 0% packet loss, time XXXX
rtt min/avg/max/mdev = 0.XXX/0.XXX/0.XXX/0.XXX ms
west #
 # show the tunnel!
west #
 echo "Tunnel should be up"
Tunnel should be up
west #
 ipsec eroute
16         192.1.2.45/32      -> 192.1.2.23/32      => tun0x1000@192.1.2.23
west #
 # Let R_U_THERE packets flow
west #
 echo "Waiting 15 seconds..."
Waiting 15 seconds...
west #
 sleep 15
west #
 echo "Setting up block via iptables"
Setting up block via iptables
west #
 iptables -I INPUT -s 192.1.2.23/32 -d 0/0 -j DROP
west #
 iptables -I OUTPUT -d 192.1.2.23/32 -s 0/0 -j DROP
west #
west #
 # DPD should have triggered now
west #
 echo "Tunnel should be still be up because we don't do DPD"
Tunnel should be still be up because we don't do DPD
west #
 ipsec eroute
16         192.1.2.45/32      -> 192.1.2.23/32      => tun0x1000@192.1.2.23
west #
 # Remove the Blockage
west #
 echo "Removing block"
Removing block
west #
 iptables -D INPUT -s 192.1.2.23/32 -d 0/0 -j DROP
west #
 iptables -D OUTPUT -d 192.1.2.23/32 -s 0/0 -j DROP
west #
 sleep 10
west #
 ping -q -c 8 -n 192.1.2.23
PING 192.1.2.23 (192.1.2.23) 56(84) bytes of data.
--- 192.1.2.23 ping statistics ---
8 packets transmitted, 0 received, 100% packet loss, time XXXX
west #
 # Tunnel should be still be up, east rekeyed it
west #
 echo "Tunnel should be up"
Tunnel should be up
west #
 ipsec eroute
32         192.1.2.45/32      -> 192.1.2.23/32      => tun0x1000@192.1.2.23
west #
 echo end
end
west #
 ipsec look
west NOW
192.1.2.45/32      -> 192.1.2.23/32      => tun0xIPIP@192.1.2.23 esp0xESPSPI@192.1.2.23
ipsec0->eth1 mtu=16260(9999)->1500
tun0xTUN#@192.1.2.23 IPIP: dir=out src=192.1.2.45 jiffies=0123456789  natencap=none natsport=0 natdport=0   refhim=0
esp0xSPISPI@192.1.2.23 ESP_AES_HMAC_SHA1: dir=out src=192.1.2.45 iv_bits=128bits iv=0xIVISFORRANDOM000IVISFORRANDOM000 ooowin=64  alen=160 aklen=160 eklen=128 jiffies=0123456789  natencap=none natsport=0 natdport=0   refhim=0
esp0xSPISPI@192.1.2.45 ESP_AES_HMAC_SHA1: dir=in  src=192.1.2.23 iv_bits=128bits iv=0xIVISFORRANDOM000IVISFORRANDOM000 ooowin=64   alen=160 aklen=160 eklen=128 jiffies=0123456789  natencap=none natsport=0 natdport=0   refhim=1
tun0xTUN#@192.1.2.45 IPIP: dir=in  src=192.1.2.23 policy=192.1.2.23/32->192.1.2.45/32 flags=0x8<> jiffies=0123456789  natencap=none natsport=0 natdport=0   refhim=1
ROUTING TABLES
default via 192.1.2.254 dev eth1 
169.254.0.0/16 dev eth0  scope link  metric 1002 
169.254.0.0/16 dev eth1  scope link  metric 1003 
169.254.0.0/16 dev eth2  scope link  metric 1004 
192.0.1.0/24 dev eth0  proto kernel  scope link  src 192.0.1.254 
192.0.2.0/24 via 192.1.2.23 dev eth1 
192.1.2.0/24 dev eth1  proto kernel  scope link  src 192.1.2.45 
192.1.2.23 dev ipsec0  scope link 
192.9.4.0/24 dev eth2  proto kernel  scope link  src 192.9.4.45 
NSS_CERTIFICATES
Certificate Nickname                                         Trust Attributes
                                                             SSL,S/MIME,JAR/XPI
west #
west #
 if [ -n "`ls /tmp/core* 2>/dev/null`" ]; then echo CORE FOUND; mv /tmp/core* OUTPUT/; fi
west #
 if [ -f /sbin/ausearch ]; then ausearch -r -m avc -ts recent ; fi

